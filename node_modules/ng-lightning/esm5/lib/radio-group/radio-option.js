import { __decorate, __metadata } from "tslib";
import { Component, TemplateRef, Input, ContentChild, ChangeDetectionStrategy, ChangeDetectorRef, HostBinding, OnInit, AfterContentInit, OnDestroy } from '@angular/core';
import { NglRadioGroup } from './radio-group';
import { NglRadioInput } from './input/input';
var NglRadioOption = /** @class */ (function () {
    function NglRadioOption(radioGroup, cd) {
        this.radioGroup = radioGroup;
        this.cd = cd;
        this.subscriptions = [];
    }
    Object.defineProperty(NglRadioOption.prototype, "isTypeList", {
        get: function () {
            return this.type === 'list';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglRadioOption.prototype, "isTypeButton", {
        get: function () {
            return this.type === 'button';
        },
        enumerable: true,
        configurable: true
    });
    NglRadioOption.prototype.ngOnInit = function () {
        var _this = this;
        this.subscriptions.push(this.radioGroup.type$.subscribe(function (type) {
            _this.type = type;
            _this.cd.detectChanges();
        }), this.radioGroup.error$.subscribe(function (errorId) {
            _this.input.describedBy = errorId;
        }));
    };
    NglRadioOption.prototype.ngAfterContentInit = function () {
        this.input.name = this.radioGroup.uid;
    };
    NglRadioOption.prototype.ngOnDestroy = function () {
        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    NglRadioOption.ctorParameters = function () { return [
        { type: NglRadioGroup },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglRadioOption.prototype, "label", void 0);
    __decorate([
        ContentChild(NglRadioInput, { static: true }),
        __metadata("design:type", NglRadioInput)
    ], NglRadioOption.prototype, "input", void 0);
    __decorate([
        HostBinding('class.slds-radio'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], NglRadioOption.prototype, "isTypeList", null);
    __decorate([
        HostBinding('class.slds-button'),
        HostBinding('class.slds-radio_button'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], NglRadioOption.prototype, "isTypeButton", null);
    NglRadioOption = __decorate([
        Component({
            selector: 'ngl-radio-option',
            template: "\n<ng-content></ng-content>\n<label class=\"slds-radio__label\" *ngIf=\"type === 'list'\" [attr.for]=\"input.id\"><span class=\"slds-radio_faux\"></span><span class=\"slds-form-element__label\" [nglInternalOutlet]=\"label\"></span></label>\n<label class=\"slds-radio_button__label\" *ngIf=\"type === 'button'\" [attr.for]=\"input.id\"><span class=\"slds-radio_faux\" [nglInternalOutlet]=\"label\"></span></label>",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [NglRadioGroup, ChangeDetectorRef])
    ], NglRadioOption);
    return NglRadioOption;
}());
export { NglRadioOption };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tb3B0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL3JhZGlvLWdyb3VwL3JhZGlvLW9wdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFDdkYsV0FBVyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTzlDO0lBS0Usd0JBQW9CLFVBQXlCLEVBQVUsRUFBcUI7UUFBeEQsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQUFVLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBZXBFLGtCQUFhLEdBQW1CLEVBQUUsQ0FBQztJQWZvQyxDQUFDO0lBS2hGLHNCQUFJLHNDQUFVO2FBQWQ7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDO1FBQzlCLENBQUM7OztPQUFBO0lBSUQsc0JBQUksd0NBQVk7YUFBaEI7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDO1FBQ2hDLENBQUM7OztPQUFBO0lBSUQsaUNBQVEsR0FBUjtRQUFBLGlCQVVDO1FBVEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFDLElBQXVCO1lBQ3RELEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLEtBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLEVBQ0YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUMsT0FBc0I7WUFDdEQsS0FBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDO1FBQ25DLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsMkNBQWtCLEdBQWxCO1FBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUM7SUFDeEMsQ0FBQztJQUVELG9DQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxVQUFDLENBQWUsSUFBSyxPQUFBLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBZixDQUFlLENBQUMsQ0FBQztJQUNuRSxDQUFDOztnQkFuQytCLGFBQWE7Z0JBQWMsaUJBQWlCOztJQUpuRTtRQUFSLEtBQUssRUFBRTs7aURBQWtDO0lBRUs7UUFBOUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FBUSxhQUFhO2lEQUFDO0lBT3BFO1FBREMsV0FBVyxDQUFDLGtCQUFrQixDQUFDOzs7b0RBRy9CO0lBSUQ7UUFGQyxXQUFXLENBQUMsbUJBQW1CLENBQUM7UUFDaEMsV0FBVyxDQUFDLHlCQUF5QixDQUFDOzs7c0RBR3RDO0lBbEJVLGNBQWM7UUFMMUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1Qix3YUFBa0M7WUFDbEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQzt5Q0FNZ0MsYUFBYSxFQUFjLGlCQUFpQjtPQUxqRSxjQUFjLENBeUMxQjtJQUFELHFCQUFDO0NBQUEsQUF6Q0QsSUF5Q0M7U0F6Q1ksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVGVtcGxhdGVSZWYsIElucHV0LCBDb250ZW50Q2hpbGQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgIEhvc3RCaW5kaW5nLCBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOZ2xSYWRpb0dyb3VwIH0gZnJvbSAnLi9yYWRpby1ncm91cCc7XG5pbXBvcnQgeyBOZ2xSYWRpb0lucHV0IH0gZnJvbSAnLi9pbnB1dC9pbnB1dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nbC1yYWRpby1vcHRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8tb3B0aW9uLmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTmdsUmFkaW9PcHRpb24gaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIEBDb250ZW50Q2hpbGQoTmdsUmFkaW9JbnB1dCwgeyBzdGF0aWM6IHRydWUgfSkgaW5wdXQ6IE5nbFJhZGlvSW5wdXQ7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByYWRpb0dyb3VwOiBOZ2xSYWRpb0dyb3VwLCBwcml2YXRlIGNkOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICB0eXBlOiAnbGlzdCcgfCAnYnV0dG9uJztcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNsZHMtcmFkaW8nKVxuICBnZXQgaXNUeXBlTGlzdCgpIHtcbiAgICByZXR1cm4gdGhpcy50eXBlID09PSAnbGlzdCc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNsZHMtYnV0dG9uJylcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zbGRzLXJhZGlvX2J1dHRvbicpXG4gIGdldCBpc1R5cGVCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gJ2J1dHRvbic7XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmlwdGlvbnM6IFN1YnNjcmlwdGlvbltdID0gW107XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goXG4gICAgICB0aGlzLnJhZGlvR3JvdXAudHlwZSQuc3Vic2NyaWJlKCh0eXBlOiAnbGlzdCcgfCAnYnV0dG9uJykgPT4ge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLmNkLmRldGVjdENoYW5nZXMoKTtcbiAgICAgIH0pLFxuICAgICAgdGhpcy5yYWRpb0dyb3VwLmVycm9yJC5zdWJzY3JpYmUoKGVycm9ySWQ6IHN0cmluZyB8IG51bGwpID0+IHtcbiAgICAgICAgdGhpcy5pbnB1dC5kZXNjcmliZWRCeSA9IGVycm9ySWQ7XG4gICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIHRoaXMuaW5wdXQubmFtZSA9IHRoaXMucmFkaW9Hcm91cC51aWQ7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoczogU3Vic2NyaXB0aW9uKSA9PiBzLnVuc3Vic2NyaWJlKCkpO1xuICB9XG59XG4iXX0=