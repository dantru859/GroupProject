import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, HostListener } from '@angular/core';
var NglDropdownItem = /** @class */ (function () {
    function NglDropdownItem(element) {
        this.element = element;
        this.isFocused = false;
    }
    NglDropdownItem.prototype.onFocus = function () {
        this.isFocused = true;
    };
    NglDropdownItem.prototype.onBlur = function () {
        this.isFocused = false;
    };
    NglDropdownItem.prototype.hasFocus = function () {
        return this.isFocused;
    };
    NglDropdownItem.prototype.focus = function () {
        this.element.nativeElement.focus();
    };
    NglDropdownItem.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        HostListener('focus'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglDropdownItem.prototype, "onFocus", null);
    __decorate([
        HostListener('blur'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglDropdownItem.prototype, "onBlur", null);
    NglDropdownItem = __decorate([
        Directive({
            selector: '[nglDropdownItem]',
            host: {
                'tabindex': '0',
            },
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], NglDropdownItem);
    return NglDropdownItem;
}());
export { NglDropdownItem };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWxpZ2h0bmluZy8iLCJzb3VyY2VzIjpbImxpYi9tZW51cy9kcm9wZG93bi1pdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFRcEU7SUFVRSx5QkFBb0IsT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQVQvQixjQUFTLEdBQUcsS0FBSyxDQUFDO0lBU2dCLENBQUM7SUFQcEIsaUNBQU8sR0FBUDtRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDO0lBQ3FCLGdDQUFNLEdBQU47UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUlELGtDQUFRLEdBQVI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVELCtCQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNyQyxDQUFDOztnQkFSNEIsVUFBVTs7SUFQaEI7UUFBdEIsWUFBWSxDQUFDLE9BQU8sQ0FBQzs7OztrREFFckI7SUFDcUI7UUFBckIsWUFBWSxDQUFDLE1BQU0sQ0FBQzs7OztpREFFcEI7SUFSVSxlQUFlO1FBTjNCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxtQkFBbUI7WUFDN0IsSUFBSSxFQUFFO2dCQUNKLFVBQVUsRUFBRSxHQUFHO2FBQ2hCO1NBQ0YsQ0FBQzt5Q0FXNkIsVUFBVTtPQVY1QixlQUFlLENBbUIzQjtJQUFELHNCQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FuQlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuZ2xEcm9wZG93bkl0ZW1dJyxcbiAgaG9zdDoge1xuICAgICd0YWJpbmRleCc6ICcwJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdsRHJvcGRvd25JdGVtIHtcbiAgcHJpdmF0ZSBpc0ZvY3VzZWQgPSBmYWxzZTtcblxuICBASG9zdExpc3RlbmVyKCdmb2N1cycpIG9uRm9jdXMoKSB7XG4gICAgdGhpcy5pc0ZvY3VzZWQgPSB0cnVlO1xuICB9XG4gIEBIb3N0TGlzdGVuZXIoJ2JsdXInKSBvbkJsdXIoKSB7XG4gICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZikge31cblxuICBoYXNGb2N1cygpIHtcbiAgICByZXR1cm4gdGhpcy5pc0ZvY3VzZWQ7XG4gIH1cblxuICBmb2N1cygpIHtcbiAgICB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICB9XG59XG4iXX0=