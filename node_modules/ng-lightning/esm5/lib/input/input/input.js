import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy, ContentChild, TemplateRef, HostBinding, AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy } from '@angular/core';
import { NglInputElement } from '../element/element';
import { toBoolean, InputBoolean } from '../../util/convert';
var NglInput = /** @class */ (function () {
    function NglInput(cd) {
        this.cd = cd;
    }
    Object.defineProperty(NglInput.prototype, "hasError", {
        get: function () {
            return toBoolean(this.error);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglInput.prototype, "errorId", {
        get: function () {
            return "error_" + this._uid;
        },
        enumerable: true,
        configurable: true
    });
    NglInput.prototype.ngOnChanges = function () {
        this.input.describedBy = this.error ? this.errorId : null;
    };
    NglInput.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (!this.input) {
            throw Error("[ng-lightning] Couldn't find an <input> with [ngl] attribute inside NglInput");
        }
        this.ɵRequiredSubscription = this.input.ɵRequiredSubject.subscribe(function (required) {
            _this.required = required;
            _this.cd.detectChanges();
        });
        this._uid = this.input.id;
        this.cd.detectChanges();
    };
    NglInput.prototype.ngOnDestroy = function () {
        if (this.ɵRequiredSubscription) {
            this.ɵRequiredSubscription.unsubscribe();
            this.ɵRequiredSubscription = null;
        }
    };
    NglInput.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        ContentChild(NglInputElement, { static: true }),
        __metadata("design:type", NglInputElement)
    ], NglInput.prototype, "input", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglInput.prototype, "label", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglInput.prototype, "error", void 0);
    __decorate([
        Input(), InputBoolean(),
        __metadata("design:type", Boolean)
    ], NglInput.prototype, "stacked", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglInput.prototype, "fieldLevelHelpTooltip", void 0);
    __decorate([
        HostBinding('class.slds-has-error'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], NglInput.prototype, "hasError", null);
    NglInput = __decorate([
        Component({
            selector: 'ngl-input,[ngl-input]',
            template: "\n<label [nglFormLabel]=\"label\" [attr.for]=\"_uid\" [required]=\"required\"></label>\n<ngl-form-help *ngIf=\"fieldLevelHelpTooltip\" [content]=\"fieldLevelHelpTooltip\"></ngl-form-help>\n<div class=\"slds-form-element__control\">\n  <ng-content></ng-content>\n</div>\n<div class=\"slds-form-element__help\" *ngIf=\"hasError\" [id]=\"errorId\" [nglInternalOutlet]=\"error\"></div>",
            changeDetection: ChangeDetectionStrategy.OnPush,
            host: {
                '[class.slds-form-element]': 'true',
            }
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], NglInput);
    return NglInput;
}());
export { NglInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvaW5wdXQvaW5wdXQvaW5wdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUNqRixnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBVzdEO0lBMEJFLGtCQUFvQixFQUFxQjtRQUFyQixPQUFFLEdBQUYsRUFBRSxDQUFtQjtJQUFHLENBQUM7SUFkN0Msc0JBQUksOEJBQVE7YUFBWjtZQUNFLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixDQUFDOzs7T0FBQTtJQU1ELHNCQUFJLDZCQUFPO2FBQVg7WUFDRSxPQUFPLFdBQVMsSUFBSSxDQUFDLElBQU0sQ0FBQztRQUM5QixDQUFDOzs7T0FBQTtJQU1ELDhCQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDNUQsQ0FBQztJQUVELHFDQUFrQixHQUFsQjtRQUFBLGlCQVlDO1FBWEMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZixNQUFNLEtBQUssQ0FBQyw4RUFBOEUsQ0FBQyxDQUFDO1NBQzdGO1FBRUQsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQUMsUUFBUTtZQUMxRSxLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUN6QixLQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCw4QkFBVyxHQUFYO1FBQ0UsSUFBSSxJQUFJLENBQUMscUJBQXFCLEVBQUU7WUFDOUIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3pDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7U0FDbkM7SUFDSCxDQUFDOztnQkF6QnVCLGlCQUFpQjs7SUF6QlE7UUFBaEQsWUFBWSxDQUFDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FBUSxlQUFlOzJDQUFDO0lBRS9EO1FBQVIsS0FBSyxFQUFFOzsyQ0FBa0M7SUFFakM7UUFBUixLQUFLLEVBQUU7OzJDQUFrQztJQUVqQjtRQUF4QixLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUU7OzZDQUFrQjtJQUVqQztRQUFSLEtBQUssRUFBRTs7MkRBQWtEO0lBRzFEO1FBREMsV0FBVyxDQUFDLHNCQUFzQixDQUFDOzs7NENBR25DO0lBZFUsUUFBUTtRQVJwQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsdUJBQXVCO1lBQ2pDLHlZQUEyQjtZQUMzQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtZQUMvQyxJQUFJLEVBQUU7Z0JBQ0osMkJBQTJCLEVBQUUsTUFBTTthQUNwQztTQUNGLENBQUM7eUNBMkJ3QixpQkFBaUI7T0ExQjlCLFFBQVEsQ0FvRHBCO0lBQUQsZUFBQztDQUFBLEFBcERELElBb0RDO1NBcERZLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29udGVudENoaWxkLCBUZW1wbGF0ZVJlZiwgSG9zdEJpbmRpbmcsXG4gICAgICAgICBBZnRlckNvbnRlbnRJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nbElucHV0RWxlbWVudCB9IGZyb20gJy4uL2VsZW1lbnQvZWxlbWVudCc7XG5pbXBvcnQgeyB0b0Jvb2xlYW4sIElucHV0Qm9vbGVhbiB9IGZyb20gJy4uLy4uL3V0aWwvY29udmVydCc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmdsLWlucHV0LFtuZ2wtaW5wdXRdJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3Muc2xkcy1mb3JtLWVsZW1lbnRdJzogJ3RydWUnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xJbnB1dCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgQENvbnRlbnRDaGlsZChOZ2xJbnB1dEVsZW1lbnQsIHsgc3RhdGljOiB0cnVlIH0pIGlucHV0OiBOZ2xJbnB1dEVsZW1lbnQ7XG5cbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KCkgZXJyb3I6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KCkgQElucHV0Qm9vbGVhbigpIHN0YWNrZWQ6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgZmllbGRMZXZlbEhlbHBUb29sdGlwOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc2xkcy1oYXMtZXJyb3InKVxuICBnZXQgaGFzRXJyb3IoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRvQm9vbGVhbih0aGlzLmVycm9yKTtcbiAgfVxuXG4gIHJlcXVpcmVkOiBib29sZWFuO1xuXG4gIF91aWQ6IHN0cmluZztcblxuICBnZXQgZXJyb3JJZCgpIHtcbiAgICByZXR1cm4gYGVycm9yXyR7dGhpcy5fdWlkfWA7XG4gIH1cblxuICBwcml2YXRlIMm1UmVxdWlyZWRTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNkOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLmlucHV0LmRlc2NyaWJlZEJ5ID0gdGhpcy5lcnJvciA/IHRoaXMuZXJyb3JJZCA6IG51bGw7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgaWYgKCF0aGlzLmlucHV0KSB7XG4gICAgICB0aHJvdyBFcnJvcihgW25nLWxpZ2h0bmluZ10gQ291bGRuJ3QgZmluZCBhbiA8aW5wdXQ+IHdpdGggW25nbF0gYXR0cmlidXRlIGluc2lkZSBOZ2xJbnB1dGApO1xuICAgIH1cblxuICAgIHRoaXMuybVSZXF1aXJlZFN1YnNjcmlwdGlvbiA9IHRoaXMuaW5wdXQuybVSZXF1aXJlZFN1YmplY3Quc3Vic2NyaWJlKChyZXF1aXJlZCkgPT4ge1xuICAgICAgdGhpcy5yZXF1aXJlZCA9IHJlcXVpcmVkO1xuICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl91aWQgPSB0aGlzLmlucHV0LmlkO1xuICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuybVSZXF1aXJlZFN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy7JtVJlcXVpcmVkU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICB0aGlzLsm1UmVxdWlyZWRTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgIH1cbiAgfVxufVxuIl19