import { __decorate, __metadata } from "tslib";
import { Directive, Input, ContentChild } from '@angular/core';
import { NglDatatableCell } from './cell';
import { NglDatatableHeadingTemplate } from './heading';
import { InputBoolean } from '../util/convert';
var NglDatatableColumn = /** @class */ (function () {
    function NglDatatableColumn() {
        this.sortable = false;
        this.truncate = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglDatatableColumn.prototype, "heading", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglDatatableColumn.prototype, "key", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglDatatableColumn.prototype, "headClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglDatatableColumn.prototype, "cellClass", void 0);
    __decorate([
        Input(), InputBoolean(),
        __metadata("design:type", Object)
    ], NglDatatableColumn.prototype, "sortable", void 0);
    __decorate([
        Input(), InputBoolean(),
        __metadata("design:type", Object)
    ], NglDatatableColumn.prototype, "truncate", void 0);
    __decorate([
        ContentChild(NglDatatableCell),
        __metadata("design:type", NglDatatableCell)
    ], NglDatatableColumn.prototype, "cellTpl", void 0);
    __decorate([
        ContentChild(NglDatatableHeadingTemplate),
        __metadata("design:type", NglDatatableHeadingTemplate)
    ], NglDatatableColumn.prototype, "headingTpl", void 0);
    NglDatatableColumn = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: 'ngl-datatable-column',
        })
    ], NglDatatableColumn);
    return NglDatatableColumn;
}());
export { NglDatatableColumn };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZXMvY29sdW1uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzFDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNL0M7SUFBQTtRQVMyQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFLNUMsQ0FBQztJQWZVO1FBQVIsS0FBSyxFQUFFOzt1REFBaUI7SUFFaEI7UUFBUixLQUFLLEVBQUU7O21EQUFhO0lBRVo7UUFBUixLQUFLLEVBQUU7O3lEQUFnQjtJQUVmO1FBQVIsS0FBSyxFQUFFOzt5REFBZ0I7SUFFQztRQUF4QixLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUU7O3dEQUFrQjtJQUVqQjtRQUF4QixLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUU7O3dEQUFrQjtJQUVWO1FBQS9CLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQztrQ0FBVSxnQkFBZ0I7dURBQUM7SUFFZjtRQUExQyxZQUFZLENBQUMsMkJBQTJCLENBQUM7a0NBQWEsMkJBQTJCOzBEQUFDO0lBZnhFLGtCQUFrQjtRQUo5QixTQUFTLENBQUM7WUFDVCw4Q0FBOEM7WUFDOUMsUUFBUSxFQUFFLHNCQUFzQjtTQUNqQyxDQUFDO09BQ1csa0JBQWtCLENBZ0I5QjtJQUFELHlCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FoQlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgQ29udGVudENoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ2xEYXRhdGFibGVDZWxsIH0gZnJvbSAnLi9jZWxsJztcbmltcG9ydCB7IE5nbERhdGF0YWJsZUhlYWRpbmdUZW1wbGF0ZSB9IGZyb20gJy4vaGVhZGluZyc7XG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4gfSBmcm9tICcuLi91dGlsL2NvbnZlcnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICBzZWxlY3RvcjogJ25nbC1kYXRhdGFibGUtY29sdW1uJyxcbn0pXG5leHBvcnQgY2xhc3MgTmdsRGF0YXRhYmxlQ29sdW1uIHtcbiAgQElucHV0KCkgaGVhZGluZzogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGtleTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGhlYWRDbGFzczogYW55O1xuXG4gIEBJbnB1dCgpIGNlbGxDbGFzczogYW55O1xuXG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSBzb3J0YWJsZSA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSB0cnVuY2F0ZSA9IGZhbHNlO1xuXG4gIEBDb250ZW50Q2hpbGQoTmdsRGF0YXRhYmxlQ2VsbCkgY2VsbFRwbDogTmdsRGF0YXRhYmxlQ2VsbDtcblxuICBAQ29udGVudENoaWxkKE5nbERhdGF0YWJsZUhlYWRpbmdUZW1wbGF0ZSkgaGVhZGluZ1RwbDogTmdsRGF0YXRhYmxlSGVhZGluZ1RlbXBsYXRlO1xufVxuIl19