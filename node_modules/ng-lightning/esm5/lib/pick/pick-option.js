import { __decorate, __metadata } from "tslib";
import { Directive, Input, HostListener, ElementRef, Renderer2, OnInit, OnDestroy } from '@angular/core';
import { NglPick } from './pick';
var NglPickOption = /** @class */ (function () {
    function NglPickOption(element, renderer, nglPick) {
        this.element = element;
        this.renderer = renderer;
        this.nglPick = nglPick;
        this._active = false;
    }
    Object.defineProperty(NglPickOption.prototype, "active", {
        // Use a getter to prevent direct altering
        get: function () {
            return this._active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglPickOption.prototype, "setValue", {
        set: function (value) {
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    NglPickOption.prototype.pick = function (evt) {
        if (evt) {
            evt.preventDefault();
        }
        this.nglPick.selectOption(this._value);
    };
    NglPickOption.prototype.ngOnInit = function () {
        var _this = this;
        this._subscription = this.nglPick.values.subscribe(function (value) {
            _this._active = _this._isActive(value);
            var activeClass = _this.nglPickActiveClass || _this.nglPick.nglPickActiveClass;
            if (activeClass) {
                if (_this.active) {
                    _this.renderer.addClass(_this.element.nativeElement, activeClass);
                }
                else {
                    _this.renderer.removeClass(_this.element.nativeElement, activeClass);
                }
            }
        });
    };
    NglPickOption.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
        this.nglPick.optionRemoved(this._value);
    };
    NglPickOption.prototype._isActive = function (value) {
        if (this.nglPick.isMultiple) {
            if (!value) {
                return false;
            }
            return Array.isArray(value) ? value.indexOf(this._value) > -1 : !!value[this._value];
        }
        else {
            return this._value === value;
        }
    };
    NglPickOption.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: NglPick }
    ]; };
    __decorate([
        Input('nglPickOption'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NglPickOption.prototype, "setValue", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglPickOption.prototype, "nglPickActiveClass", void 0);
    __decorate([
        HostListener('click'),
        HostListener('keydown.Space', ['$event']),
        HostListener('keydown.Enter', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], NglPickOption.prototype, "pick", null);
    NglPickOption = __decorate([
        Directive({
            selector: '[nglPickOption]',
            exportAs: 'nglPickOption',
            host: {
                'role': 'button',
            },
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2, NglPick])
    ], NglPickOption);
    return NglPickOption;
}());
export { NglPickOption };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGljay1vcHRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvcGljay9waWNrLW9wdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6RyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBU2pDO0lBaUJFLHVCQUFvQixPQUFtQixFQUFVLFFBQW1CLEVBQVUsT0FBZ0I7UUFBMUUsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBSHRGLFlBQU8sR0FBRyxLQUFLLENBQUM7SUFHeUUsQ0FBQztJQWRsRyxzQkFBSSxpQ0FBTTtRQURWLDBDQUEwQzthQUMxQztZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQUV1QixzQkFBSSxtQ0FBUTthQUFaLFVBQWEsS0FBVTtZQUM3QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQWFELDRCQUFJLEdBQUosVUFBSyxHQUFXO1FBQ2QsSUFBSSxHQUFHLEVBQUU7WUFDUCxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDdEI7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELGdDQUFRLEdBQVI7UUFBQSxpQkFhQztRQVpDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUEsS0FBSztZQUN0RCxLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFckMsSUFBTSxXQUFXLEdBQUcsS0FBSSxDQUFDLGtCQUFrQixJQUFJLEtBQUksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUM7WUFDL0UsSUFBSSxXQUFXLEVBQUU7Z0JBQ2YsSUFBSSxLQUFJLENBQUMsTUFBTSxFQUFFO29CQUNmLEtBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO2lCQUNqRTtxQkFBTTtvQkFDTCxLQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsQ0FBQztpQkFDcEU7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELG1DQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRU8saUNBQVMsR0FBakIsVUFBa0IsS0FBVTtRQUMxQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFO1lBQzNCLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQUUsT0FBTyxLQUFLLENBQUM7YUFBRTtZQUM3QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN0RjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLEtBQUssQ0FBQztTQUM5QjtJQUNILENBQUM7O2dCQXZDNEIsVUFBVTtnQkFBb0IsU0FBUztnQkFBbUIsT0FBTzs7SUFWdEU7UUFBdkIsS0FBSyxDQUFDLGVBQWUsQ0FBQzs7O2lEQUV0QjtJQUVRO1FBQVIsS0FBSyxFQUFFOzs2REFBNEI7SUFXcEM7UUFIQyxZQUFZLENBQUMsT0FBTyxDQUFDO1FBQ3JCLFlBQVksQ0FBQyxlQUFlLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QyxZQUFZLENBQUMsZUFBZSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7O3lDQUMvQixLQUFLOzs2Q0FLZjtJQTNCVSxhQUFhO1FBUHpCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsUUFBUSxFQUFFLGVBQWU7WUFDekIsSUFBSSxFQUFFO2dCQUNKLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0YsQ0FBQzt5Q0FrQjZCLFVBQVUsRUFBb0IsU0FBUyxFQUFtQixPQUFPO09BakJuRixhQUFhLENBeUR6QjtJQUFELG9CQUFDO0NBQUEsQUF6REQsSUF5REM7U0F6RFksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIEhvc3RMaXN0ZW5lciwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOZ2xQaWNrIH0gZnJvbSAnLi9waWNrJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25nbFBpY2tPcHRpb25dJyxcbiAgZXhwb3J0QXM6ICduZ2xQaWNrT3B0aW9uJyxcbiAgaG9zdDoge1xuICAgICdyb2xlJzogJ2J1dHRvbicsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIE5nbFBpY2tPcHRpb24gaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgLy8gVXNlIGEgZ2V0dGVyIHRvIHByZXZlbnQgZGlyZWN0IGFsdGVyaW5nXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZTtcbiAgfVxuXG4gIEBJbnB1dCgnbmdsUGlja09wdGlvbicpIHNldCBzZXRWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIEBJbnB1dCgpIG5nbFBpY2tBY3RpdmVDbGFzczogc3RyaW5nO1xuXG4gIHByaXZhdGUgX3ZhbHVlOiBhbnk7XG4gIHByaXZhdGUgX2FjdGl2ZSA9IGZhbHNlO1xuICBwcml2YXRlIF9zdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBuZ2xQaWNrOiBOZ2xQaWNrKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bi5TcGFjZScsIFsnJGV2ZW50J10pXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uRW50ZXInLCBbJyRldmVudCddKVxuICBwaWNrKGV2dD86IEV2ZW50KSB7XG4gICAgaWYgKGV2dCkge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICAgIHRoaXMubmdsUGljay5zZWxlY3RPcHRpb24odGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9uID0gdGhpcy5uZ2xQaWNrLnZhbHVlcy5zdWJzY3JpYmUodmFsdWUgPT4ge1xuICAgICAgdGhpcy5fYWN0aXZlID0gdGhpcy5faXNBY3RpdmUodmFsdWUpO1xuXG4gICAgICBjb25zdCBhY3RpdmVDbGFzcyA9IHRoaXMubmdsUGlja0FjdGl2ZUNsYXNzIHx8IHRoaXMubmdsUGljay5uZ2xQaWNrQWN0aXZlQ2xhc3M7XG4gICAgICBpZiAoYWN0aXZlQ2xhc3MpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgYWN0aXZlQ2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGFjdGl2ZUNsYXNzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgdGhpcy5uZ2xQaWNrLm9wdGlvblJlbW92ZWQodGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBfaXNBY3RpdmUodmFsdWU6IGFueSkge1xuICAgIGlmICh0aGlzLm5nbFBpY2suaXNNdWx0aXBsZSkge1xuICAgICAgaWYgKCF2YWx1ZSkgeyByZXR1cm4gZmFsc2U7IH1cbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLmluZGV4T2YodGhpcy5fdmFsdWUpID4gLTEgOiAhIXZhbHVlW3RoaXMuX3ZhbHVlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlID09PSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==