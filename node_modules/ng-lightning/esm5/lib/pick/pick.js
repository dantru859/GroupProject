import { __decorate, __metadata, __read, __spread } from "tslib";
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { InputBoolean } from '../util/convert';
var NglPick = /** @class */ (function () {
    function NglPick() {
        this.values = new BehaviorSubject(null);
        this.nglPickChange = new EventEmitter();
        this.nglOptionDestroyed = new EventEmitter();
        this.isMultiple = false;
    }
    Object.defineProperty(NglPick.prototype, "setSelected", {
        set: function (selected) {
            this.selected = selected;
            this.ngAfterContentInit();
        },
        enumerable: true,
        configurable: true
    });
    NglPick.prototype.ngAfterContentInit = function () {
        this.values.next(this.selected);
    };
    NglPick.prototype.selectOption = function (value) {
        var _a;
        var next;
        if (this.isMultiple) {
            if (Array.isArray(this.selected)) {
                // Remove if already there or add to selection
                var index = this.selected.indexOf(value);
                next = index > -1
                    ? __spread(this.selected.slice(0, index), this.selected.slice(index + 1)) : __spread(this.selected, [value]);
            }
            else {
                next = Object.assign({}, this.selected, (_a = {}, _a[value] = !this.selected[value], _a));
            }
        }
        else {
            next = value;
        }
        this.nglPickChange.emit(next);
    };
    NglPick.prototype.optionRemoved = function (value) {
        var _this = this;
        if (this.isMultiple && !this.selected) {
            return;
        }
        var emit;
        if (this.isMultiple) {
            emit = Array.isArray(this.selected) ? this.selected.indexOf(value) > -1 : !!this.selected[value];
        }
        else {
            emit = this.selected === value;
        }
        if (emit) {
            setTimeout(function () { return _this.nglOptionDestroyed.emit(value); });
        }
    };
    __decorate([
        Input('nglPick'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], NglPick.prototype, "setSelected", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglPick.prototype, "nglPickActiveClass", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], NglPick.prototype, "nglPickChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], NglPick.prototype, "nglOptionDestroyed", void 0);
    __decorate([
        Input('nglPickMultiple'), InputBoolean(),
        __metadata("design:type", Object)
    ], NglPick.prototype, "isMultiple", void 0);
    NglPick = __decorate([
        Directive({
            selector: '[nglPick]',
        })
    ], NglPick);
    return NglPick;
}());
export { NglPick };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGljay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWxpZ2h0bmluZy8iLCJzb3VyY2VzIjpbImxpYi9waWNrL3BpY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSy9DO0lBQUE7UUFHRSxXQUFNLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFTekIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ25DLHVCQUFrQixHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFUixlQUFVLEdBQUcsS0FBSyxDQUFDO0lBMEMvRCxDQUFDO0lBcERtQixzQkFBSSxnQ0FBVzthQUFmLFVBQWdCLFFBQWdCO1lBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQzVCLENBQUM7OztPQUFBO0lBU0Qsb0NBQWtCLEdBQWxCO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCw4QkFBWSxHQUFaLFVBQWEsS0FBVTs7UUFDckIsSUFBSSxJQUFTLENBQUM7UUFDZCxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRTtnQkFDaEMsOENBQThDO2dCQUM5QyxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDM0MsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUM7b0JBQ1QsQ0FBQyxVQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBSyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQ3RFLENBQUMsVUFBSyxJQUFJLENBQUMsUUFBUSxHQUFFLEtBQUssRUFBQyxDQUFDO2FBQ3JDO2lCQUFNO2dCQUNMLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxZQUFHLEdBQUMsS0FBSyxJQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBRSxDQUFDO2FBQzNFO1NBQ0Y7YUFBTTtZQUNMLElBQUksR0FBRyxLQUFLLENBQUM7U0FDZDtRQUVELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCwrQkFBYSxHQUFiLFVBQWMsS0FBVTtRQUF4QixpQkFnQkM7UUFmQyxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ3JDLE9BQU87U0FDUjtRQUVELElBQUksSUFBYSxDQUFDO1FBRWxCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNsRzthQUFNO1lBQ0wsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLEtBQUssS0FBSyxDQUFDO1NBQ2hDO1FBRUQsSUFBSSxJQUFJLEVBQUU7WUFDUixVQUFVLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQW5DLENBQW1DLENBQUMsQ0FBQztTQUN2RDtJQUNILENBQUM7SUFuRGlCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7Ozs4Q0FHaEI7SUFFUTtRQUFSLEtBQUssRUFBRTs7dURBQTRCO0lBRTFCO1FBQVQsTUFBTSxFQUFFOztrREFBb0M7SUFDbkM7UUFBVCxNQUFNLEVBQUU7O3VEQUF5QztJQUVSO1FBQXpDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLFlBQVksRUFBRTs7K0NBQW9CO0lBZmxELE9BQU87UUFIbkIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFdBQVc7U0FDdEIsQ0FBQztPQUNXLE9BQU8sQ0F5RG5CO0lBQUQsY0FBQztDQUFBLEFBekRELElBeURDO1NBekRZLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgQWZ0ZXJDb250ZW50SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4gfSBmcm9tICcuLi91dGlsL2NvbnZlcnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmdsUGlja10nLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xQaWNrIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG5cbiAgc2VsZWN0ZWQ6IGFueTtcbiAgdmFsdWVzID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKTtcblxuICBASW5wdXQoJ25nbFBpY2snKSBzZXQgc2V0U2VsZWN0ZWQoc2VsZWN0ZWQ6IHN0cmluZykge1xuICAgIHRoaXMuc2VsZWN0ZWQgPSBzZWxlY3RlZDtcbiAgICB0aGlzLm5nQWZ0ZXJDb250ZW50SW5pdCgpO1xuICB9XG5cbiAgQElucHV0KCkgbmdsUGlja0FjdGl2ZUNsYXNzOiBzdHJpbmc7XG5cbiAgQE91dHB1dCgpIG5nbFBpY2tDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBuZ2xPcHRpb25EZXN0cm95ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCduZ2xQaWNrTXVsdGlwbGUnKSBASW5wdXRCb29sZWFuKCkgaXNNdWx0aXBsZSA9IGZhbHNlO1xuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICB0aGlzLnZhbHVlcy5uZXh0KHRoaXMuc2VsZWN0ZWQpO1xuICB9XG5cbiAgc2VsZWN0T3B0aW9uKHZhbHVlOiBhbnkpIHtcbiAgICBsZXQgbmV4dDogYW55O1xuICAgIGlmICh0aGlzLmlzTXVsdGlwbGUpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuc2VsZWN0ZWQpKSB7XG4gICAgICAgIC8vIFJlbW92ZSBpZiBhbHJlYWR5IHRoZXJlIG9yIGFkZCB0byBzZWxlY3Rpb25cbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnNlbGVjdGVkLmluZGV4T2YodmFsdWUpO1xuICAgICAgICBuZXh0ID0gaW5kZXggPiAtMVxuICAgICAgICAgICAgICAgID8gWy4uLnRoaXMuc2VsZWN0ZWQuc2xpY2UoMCwgaW5kZXgpLCAuLi50aGlzLnNlbGVjdGVkLnNsaWNlKGluZGV4ICsgMSldXG4gICAgICAgICAgICAgICAgOiBbLi4udGhpcy5zZWxlY3RlZCwgdmFsdWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc2VsZWN0ZWQsIHtbdmFsdWVdOiAhdGhpcy5zZWxlY3RlZFt2YWx1ZV19KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbmV4dCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHRoaXMubmdsUGlja0NoYW5nZS5lbWl0KG5leHQpO1xuICB9XG5cbiAgb3B0aW9uUmVtb3ZlZCh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHRoaXMuaXNNdWx0aXBsZSAmJiAhdGhpcy5zZWxlY3RlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBlbWl0OiBib29sZWFuO1xuXG4gICAgaWYgKHRoaXMuaXNNdWx0aXBsZSkge1xuICAgICAgZW1pdCA9IEFycmF5LmlzQXJyYXkodGhpcy5zZWxlY3RlZCkgPyB0aGlzLnNlbGVjdGVkLmluZGV4T2YodmFsdWUpID4gLTEgOiAhIXRoaXMuc2VsZWN0ZWRbdmFsdWVdO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbWl0ID0gdGhpcy5zZWxlY3RlZCA9PT0gdmFsdWU7XG4gICAgfVxuXG4gICAgaWYgKGVtaXQpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5uZ2xPcHRpb25EZXN0cm95ZWQuZW1pdCh2YWx1ZSkpO1xuICAgIH1cbiAgfVxufVxuIl19