import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy, TemplateRef, Renderer2, ElementRef } from '@angular/core';
import { uniqueId } from '../util/util';
var NglCarouselImage = /** @class */ (function () {
    function NglCarouselImage(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.uid = uniqueId('carousel-image');
        this.renderer.setAttribute(this.el.nativeElement, 'id', this.uid);
        this.renderer.addClass(this.el.nativeElement, 'slds-carousel__panel');
        this.renderer.setAttribute(this.el.nativeElement, 'role', 'tabpanel');
    }
    Object.defineProperty(NglCarouselImage.prototype, "labelledby", {
        set: function (labelledby) {
            this.renderer.setAttribute(this.el.nativeElement, 'aria-labelledby', labelledby);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglCarouselImage.prototype, "active", {
        set: function (active) {
            this.renderer.setAttribute(this.el.nativeElement, 'aria-hidden', "" + !active);
        },
        enumerable: true,
        configurable: true
    });
    NglCarouselImage.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglCarouselImage.prototype, "src", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglCarouselImage.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglCarouselImage.prototype, "description", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglCarouselImage.prototype, "alternativeText", void 0);
    NglCarouselImage = __decorate([
        Component({
            selector: 'ngl-carousel-image',
            template: "<a class=\"slds-carousel__panel-action slds-text-link_reset\" href=\"javascript:void(0);\" [attr.tabindex]=\"active ? 0 : -1\">\n  <div class=\"slds-carousel__image\"><img [src]=\"src\" [attr.alt]=\"alternativeText || null\"></div>\n  <div class=\"slds-carousel__content\">\n    <h2 class=\"slds-carousel__content-title\" [nglInternalOutlet]=\"header\"></h2>\n    <p [nglInternalOutlet]=\"description\"></p>\n  </div></a>",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], NglCarouselImage);
    return NglCarouselImage;
}());
export { NglCarouselImage };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwtaW1hZ2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvY2Fyb3VzZWwvY2Fyb3VzZWwtaW1hZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFPeEM7SUFnQ0UsMEJBQW9CLEVBQWMsRUFBVSxRQUFtQjtRQUEzQyxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQVYvRCxRQUFHLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFXL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBWkQsc0JBQUksd0NBQVU7YUFBZCxVQUFlLFVBQWtCO1lBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGlCQUFpQixFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ25GLENBQUM7OztPQUFBO0lBRUQsc0JBQUksb0NBQU07YUFBVixVQUFXLE1BQWU7WUFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsYUFBYSxFQUFFLEtBQUcsQ0FBQyxNQUFRLENBQUMsQ0FBQztRQUNqRixDQUFDOzs7T0FBQTs7Z0JBRXVCLFVBQVU7Z0JBQW9CLFNBQVM7O0lBM0J0RDtRQUFSLEtBQUssRUFBRTs7aURBQWE7SUFLWjtRQUFSLEtBQUssRUFBRTs7b0RBQWdCO0lBS2Y7UUFBUixLQUFLLEVBQUU7O3lEQUF3QztJQUt2QztRQUFSLEtBQUssRUFBRTs7NkRBQXlCO0lBcEJ0QixnQkFBZ0I7UUFMNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixpYkFBb0M7WUFDcEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQzt5Q0FpQ3dCLFVBQVUsRUFBb0IsU0FBUztPQWhDcEQsZ0JBQWdCLENBc0M1QjtJQUFELHVCQUFDO0NBQUEsQUF0Q0QsSUFzQ0M7U0F0Q1ksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIFRlbXBsYXRlUmVmLCBSZW5kZXJlcjIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnLi4vdXRpbC91dGlsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmdsLWNhcm91c2VsLWltYWdlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Nhcm91c2VsLWltYWdlLmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTmdsQ2Fyb3VzZWxJbWFnZSB7XG5cbiAgLyoqXG4gICAqIFx0VGhlIHBhdGggdG8gdGhlIGltYWdlLlxuICAgKi9cbiAgQElucHV0KCkgc3JjOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRleHQgZm9yIHRoZSBsYWJlbCB0aGF0J3MgZGlzcGxheWVkIHVuZGVyIHRoZSBpbWFnZS5cbiAgICovXG4gIEBJbnB1dCgpIGhlYWRlcjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUZXh0IGRpc3BsYXllZCB1bmRlciB0aGUgaGVhZGVyLlxuICAgKi9cbiAgQElucHV0KCkgZGVzY3JpcHRpb246IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgLyoqXG4gICAqIEFzc2lzdGl2ZSB0ZXh0IGZvciB0aGUgaW1hZ2UuXG4gICAqL1xuICBASW5wdXQoKSBhbHRlcm5hdGl2ZVRleHQ6IHN0cmluZztcblxuICB1aWQgPSB1bmlxdWVJZCgnY2Fyb3VzZWwtaW1hZ2UnKTtcblxuICBzZXQgbGFiZWxsZWRieShsYWJlbGxlZGJ5OiBzdHJpbmcpIHtcbiAgICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsICdhcmlhLWxhYmVsbGVkYnknLCBsYWJlbGxlZGJ5KTtcbiAgfVxuXG4gIHNldCBhY3RpdmUoYWN0aXZlOiBib29sZWFuKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnYXJpYS1oaWRkZW4nLCBgJHshYWN0aXZlfWApO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnaWQnLCB0aGlzLnVpZCk7XG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsICdzbGRzLWNhcm91c2VsX19wYW5lbCcpO1xuICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ3JvbGUnLCAndGFicGFuZWwnKTtcbiAgfVxuXG59XG4iXX0=