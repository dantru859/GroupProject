import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy, OnDestroy, ElementRef, Renderer2, HostListener, ChangeDetectorRef, NgZone } from '@angular/core';
import { uniqueId, trapEvent, menuItemScroll } from '../util/util';
import { InputBoolean } from '../util/convert';
import { NglComboboxService } from './combobox.service';
var NglComboboxOption = /** @class */ (function () {
    function NglComboboxOption(element, service, cd, ngZone, renderer) {
        this.element = element;
        this.service = service;
        this.cd = cd;
        this.ngZone = ngZone;
        this.disabled = false;
        this.uid = uniqueId('combo-option');
        this._active = false;
        // Flag to disable scrolling into view when option is activated using mouse
        this.disableNextScrollIntoView = false;
        this.destroyed = false;
        renderer.addClass(element.nativeElement, 'slds-listbox__item');
        renderer.setAttribute(element.nativeElement, 'role', 'presentation');
    }
    Object.defineProperty(NglComboboxOption.prototype, "active", {
        get: function () {
            return this._active;
        },
        // Whether or not the option is currently active and ready to be selected
        set: function (active) {
            if (this.active === active || this.destroyed) {
                return;
            }
            this._active = active;
            this.cd.detectChanges();
            if (active) {
                this.service.combobox.inputEl.setAriaActiveDescendant(this.uid);
                this.scrollIntoView();
            }
            else {
                clearTimeout(this.scrollTimer);
            }
        },
        enumerable: true,
        configurable: true
    });
    NglComboboxOption.prototype.onSelectViaInteraction = function (evt) {
        trapEvent(evt);
        if (!this.disabled) {
            this.service.combobox.onOptionSelection(this);
        }
    };
    NglComboboxOption.prototype.hover = function () {
        if (!this.disabled) {
            this.disableNextScrollIntoView = true;
            this.service.combobox.keyManager.setActiveItem(this);
        }
    };
    NglComboboxOption.prototype.setActiveStyles = function () {
        this.active = true;
    };
    NglComboboxOption.prototype.setInactiveStyles = function () {
        this.active = false;
    };
    NglComboboxOption.prototype.scrollIntoView = function () {
        var _this = this;
        if (this.disableNextScrollIntoView) {
            this.disableNextScrollIntoView = false;
            return;
        }
        this.ngZone.runOutsideAngular(function () {
            _this.scrollTimer = setTimeout(function () {
                var li = _this.element.nativeElement;
                menuItemScroll(li.parentElement.parentElement, li);
            }, 0);
        });
    };
    NglComboboxOption.prototype.ngOnDestroy = function () {
        this.destroyed = true;
        clearTimeout(this.scrollTimer);
    };
    NglComboboxOption.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NglComboboxService },
        { type: ChangeDetectorRef },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglComboboxOption.prototype, "value", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglComboboxOption.prototype, "label", void 0);
    __decorate([
        Input(), InputBoolean(),
        __metadata("design:type", Boolean)
    ], NglComboboxOption.prototype, "selected", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglComboboxOption.prototype, "disabled", void 0);
    __decorate([
        HostListener('mousedown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], NglComboboxOption.prototype, "onSelectViaInteraction", null);
    __decorate([
        HostListener('mouseenter'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglComboboxOption.prototype, "hover", null);
    NglComboboxOption = __decorate([
        Component({
            selector: 'ngl-combobox-option, [nglComboboxOption]',
            template: "\n<div class=\"slds-media slds-listbox__option slds-listbox__option_plain slds-media_small slds-media_center\" role=\"option\" [attr.id]=\"uid\" [class.slds-has-focus]=\"active\" [class.slds-is-selected]=\"selected\" [attr.aria-selected]=\"selected || null\" [attr.aria-disabled]=\"disabled || null\"><span class=\"slds-media__figure slds-listbox__option-icon\"><span class=\"slds-icon_container slds-icon-utility-check slds-current-color\" *ngIf=\"selected\">\n      <svg class=\"slds-icon slds-icon_x-small\" nglIconName=\"utility:check\"></svg></span></span><span class=\"slds-media__body\"><span class=\"slds-truncate\"><span class=\"slds-assistive-text\" *ngIf=\"selected\">Current Selection:</span>{{ label }}</span></span></div>",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ElementRef,
            NglComboboxService,
            ChangeDetectorRef,
            NgZone,
            Renderer2])
    ], NglComboboxOption);
    return NglComboboxOption;
}());
export { NglComboboxOption };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm9ib3gtb3B0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2NvbWJvYm94ZXMvY29tYm9ib3gtb3B0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQ3BELFVBQVUsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sRUFDL0QsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQU94RDtJQXlDRSwyQkFBb0IsT0FBbUIsRUFDbkIsT0FBMkIsRUFDM0IsRUFBcUIsRUFDckIsTUFBYyxFQUN0QixRQUFtQjtRQUpYLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFDbkIsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFDM0IsT0FBRSxHQUFGLEVBQUUsQ0FBbUI7UUFDckIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQXBDekIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUUxQixRQUFHLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBc0J2QixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSXhCLDJFQUEyRTtRQUNuRSw4QkFBeUIsR0FBRyxLQUFLLENBQUM7UUFFbEMsY0FBUyxHQUFHLEtBQUssQ0FBQztRQU94QixRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUMvRCxRQUFRLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsTUFBTSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZF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Q0FBQyxNQUFNO1NBQ2hELENBQUM7eUNBMEM2QixVQUFVO1lBQ1Ysa0JBQWtCO1lBQ3ZCLGlCQUFpQjtZQUNiLE1BQU07WUFDWixTQUFTO09BN0NwQixpQkFBaUIsQ0E0RjdCO0lBQUQsd0JBQUM7Q0FBQSxBQTVGRCxJQTRGQztTQTVGWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgT25EZXN0cm95LFxuICBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIEhvc3RMaXN0ZW5lciwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhpZ2hsaWdodGFibGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyB1bmlxdWVJZCwgdHJhcEV2ZW50LCBtZW51SXRlbVNjcm9sbCB9IGZyb20gJy4uL3V0aWwvdXRpbCc7XG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4gfSBmcm9tICcuLi91dGlsL2NvbnZlcnQnO1xuaW1wb3J0IHsgTmdsQ29tYm9ib3hTZXJ2aWNlIH0gZnJvbSAnLi9jb21ib2JveC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmdsLWNvbWJvYm94LW9wdGlvbiwgW25nbENvbWJvYm94T3B0aW9uXScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb21ib2JveC1vcHRpb24uaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xDb21ib2JveE9wdGlvbiBpbXBsZW1lbnRzIEhpZ2hsaWdodGFibGUsIE9uRGVzdHJveSB7XG5cbiAgQElucHV0KCkgdmFsdWU6IGFueTtcblxuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSBzZWxlY3RlZDogYm9vbGVhbjtcblxuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIHVpZCA9IHVuaXF1ZUlkKCdjb21iby1vcHRpb24nKTtcblxuICAvLyBXaGV0aGVyIG9yIG5vdCB0aGUgb3B0aW9uIGlzIGN1cnJlbnRseSBhY3RpdmUgYW5kIHJlYWR5IHRvIGJlIHNlbGVjdGVkXG4gIHNldCBhY3RpdmUoYWN0aXZlOiBib29sZWFuKSB7XG4gICAgaWYgKHRoaXMuYWN0aXZlID09PSBhY3RpdmUgfHwgdGhpcy5kZXN0cm95ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9hY3RpdmUgPSBhY3RpdmU7XG4gICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XG5cbiAgICBpZiAoYWN0aXZlKSB7XG4gICAgICB0aGlzLnNlcnZpY2UuY29tYm9ib3guaW5wdXRFbC5zZXRBcmlhQWN0aXZlRGVzY2VuZGFudCh0aGlzLnVpZCk7XG4gICAgICB0aGlzLnNjcm9sbEludG9WaWV3KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnNjcm9sbFRpbWVyKTtcbiAgICB9XG4gIH1cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlO1xuICB9XG5cbiAgcHJpdmF0ZSBfYWN0aXZlID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBzY3JvbGxUaW1lcjogYW55O1xuXG4gIC8vIEZsYWcgdG8gZGlzYWJsZSBzY3JvbGxpbmcgaW50byB2aWV3IHdoZW4gb3B0aW9uIGlzIGFjdGl2YXRlZCB1c2luZyBtb3VzZVxuICBwcml2YXRlIGRpc2FibGVOZXh0U2Nyb2xsSW50b1ZpZXcgPSBmYWxzZTtcblxuICBwcml2YXRlIGRlc3Ryb3llZCA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBzZXJ2aWNlOiBOZ2xDb21ib2JveFNlcnZpY2UsXG4gICAgICAgICAgICAgIHByaXZhdGUgY2Q6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICAgICAgICBwcml2YXRlIG5nWm9uZTogTmdab25lLFxuICAgICAgICAgICAgICByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgcmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnc2xkcy1saXN0Ym94X19pdGVtJyk7XG4gICAgcmVuZGVyZXIuc2V0QXR0cmlidXRlKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3JvbGUnLCAncHJlc2VudGF0aW9uJyk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nLCBbJyRldmVudCddKVxuICBvblNlbGVjdFZpYUludGVyYWN0aW9uKGV2dDogTW91c2VFdmVudCkge1xuICAgIHRyYXBFdmVudChldnQpO1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5zZXJ2aWNlLmNvbWJvYm94Lm9uT3B0aW9uU2VsZWN0aW9uKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInKVxuICBob3ZlcigpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuZGlzYWJsZU5leHRTY3JvbGxJbnRvVmlldyA9IHRydWU7XG4gICAgICB0aGlzLnNlcnZpY2UuY29tYm9ib3gua2V5TWFuYWdlci5zZXRBY3RpdmVJdGVtKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIHNldEFjdGl2ZVN0eWxlcygpOiB2b2lkIHtcbiAgICB0aGlzLmFjdGl2ZSA9IHRydWU7XG4gIH1cblxuICBzZXRJbmFjdGl2ZVN0eWxlcygpOiB2b2lkIHtcbiAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgc2Nyb2xsSW50b1ZpZXcoKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZU5leHRTY3JvbGxJbnRvVmlldykge1xuICAgICAgdGhpcy5kaXNhYmxlTmV4dFNjcm9sbEludG9WaWV3ID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5zY3JvbGxUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBjb25zdCBsaTogSFRNTEVsZW1lbnQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAgICAgbWVudUl0ZW1TY3JvbGwobGkucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LCBsaSk7XG4gICAgICB9LCAwKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5zY3JvbGxUaW1lcik7XG4gIH1cbn1cbiJdfQ==