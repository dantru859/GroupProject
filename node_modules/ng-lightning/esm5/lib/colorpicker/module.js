import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NglIconsModule } from '../icons/module';
import { NglTabsModule } from '../tabs/module';
import { NglPopoversModule } from '../popovers/module';
import { NglFormsModule } from '../forms/module';
import { NglInternalOutletModule } from '../util/outlet.module';
import { NglColorpicker } from './colorpicker';
import { NglColorpickerSwatch } from './swatch/colorpicker-swatch';
import { NglColorpickerCustom } from './custom/colorpicker-custom';
import { NglColorpickerRange } from './custom/range/colorpicker-range';
import { NglColorpickerInputs } from './custom/inputs/colorpicker-inputs';
import { NglColorpickerSwatches } from './swatches/colorpicker-swatches';
import { NglColorpickerSwatchTrigger } from './swatches/trigger';
var DIRECTIVES = [
    NglColorpicker,
];
var NglColorpickerModule = /** @class */ (function () {
    function NglColorpickerModule() {
    }
    NglColorpickerModule = __decorate([
        NgModule({
            declarations: __spread(DIRECTIVES, [
                NglColorpickerSwatch,
                NglColorpickerCustom,
                NglColorpickerRange,
                NglColorpickerInputs,
                NglColorpickerSwatches,
                NglColorpickerSwatchTrigger,
            ]),
            exports: DIRECTIVES,
            imports: [
                CommonModule,
                NglIconsModule,
                NglTabsModule,
                NglPopoversModule,
                NglFormsModule,
                NglInternalOutletModule,
            ],
        })
    ], NglColorpickerModule);
    return NglColorpickerModule;
}());
export { NglColorpickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2NvbG9ycGlja2VyL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVqRSxJQUFNLFVBQVUsR0FBRztJQUNqQixjQUFjO0NBQ2YsQ0FBQztBQXNCRjtJQUFBO0lBQW1DLENBQUM7SUFBdkIsb0JBQW9CO1FBcEJoQyxRQUFRLENBQUM7WUFDUixZQUFZLFdBQ1AsVUFBVTtnQkFDYixvQkFBb0I7Z0JBQ3BCLG9CQUFvQjtnQkFDcEIsbUJBQW1CO2dCQUNuQixvQkFBb0I7Z0JBQ3BCLHNCQUFzQjtnQkFDdEIsMkJBQTJCO2NBQzVCO1lBQ0QsT0FBTyxFQUFFLFVBQVU7WUFDbkIsT0FBTyxFQUFFO2dCQUNQLFlBQVk7Z0JBQ1osY0FBYztnQkFDZCxhQUFhO2dCQUNiLGlCQUFpQjtnQkFDakIsY0FBYztnQkFDZCx1QkFBdUI7YUFDeEI7U0FDRixDQUFDO09BQ1csb0JBQW9CLENBQUc7SUFBRCwyQkFBQztDQUFBLEFBQXBDLElBQW9DO1NBQXZCLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdsSWNvbnNNb2R1bGUgfSBmcm9tICcuLi9pY29ucy9tb2R1bGUnO1xuaW1wb3J0IHsgTmdsVGFic01vZHVsZSB9IGZyb20gJy4uL3RhYnMvbW9kdWxlJztcbmltcG9ydCB7IE5nbFBvcG92ZXJzTW9kdWxlIH0gZnJvbSAnLi4vcG9wb3ZlcnMvbW9kdWxlJztcbmltcG9ydCB7IE5nbEZvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZm9ybXMvbW9kdWxlJztcbmltcG9ydCB7IE5nbEludGVybmFsT3V0bGV0TW9kdWxlIH0gZnJvbSAnLi4vdXRpbC9vdXRsZXQubW9kdWxlJztcblxuaW1wb3J0IHsgTmdsQ29sb3JwaWNrZXIgfSBmcm9tICcuL2NvbG9ycGlja2VyJztcbmltcG9ydCB7IE5nbENvbG9ycGlja2VyU3dhdGNoIH0gZnJvbSAnLi9zd2F0Y2gvY29sb3JwaWNrZXItc3dhdGNoJztcbmltcG9ydCB7IE5nbENvbG9ycGlja2VyQ3VzdG9tIH0gZnJvbSAnLi9jdXN0b20vY29sb3JwaWNrZXItY3VzdG9tJztcbmltcG9ydCB7IE5nbENvbG9ycGlja2VyUmFuZ2UgfSBmcm9tICcuL2N1c3RvbS9yYW5nZS9jb2xvcnBpY2tlci1yYW5nZSc7XG5pbXBvcnQgeyBOZ2xDb2xvcnBpY2tlcklucHV0cyB9IGZyb20gJy4vY3VzdG9tL2lucHV0cy9jb2xvcnBpY2tlci1pbnB1dHMnO1xuaW1wb3J0IHsgTmdsQ29sb3JwaWNrZXJTd2F0Y2hlcyB9IGZyb20gJy4vc3dhdGNoZXMvY29sb3JwaWNrZXItc3dhdGNoZXMnO1xuaW1wb3J0IHsgTmdsQ29sb3JwaWNrZXJTd2F0Y2hUcmlnZ2VyIH0gZnJvbSAnLi9zd2F0Y2hlcy90cmlnZ2VyJztcblxuY29uc3QgRElSRUNUSVZFUyA9IFtcbiAgTmdsQ29sb3JwaWNrZXIsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICAuLi5ESVJFQ1RJVkVTLFxuICAgIE5nbENvbG9ycGlja2VyU3dhdGNoLFxuICAgIE5nbENvbG9ycGlja2VyQ3VzdG9tLFxuICAgIE5nbENvbG9ycGlja2VyUmFuZ2UsXG4gICAgTmdsQ29sb3JwaWNrZXJJbnB1dHMsXG4gICAgTmdsQ29sb3JwaWNrZXJTd2F0Y2hlcyxcbiAgICBOZ2xDb2xvcnBpY2tlclN3YXRjaFRyaWdnZXIsXG4gIF0sXG4gIGV4cG9ydHM6IERJUkVDVElWRVMsXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgTmdsSWNvbnNNb2R1bGUsXG4gICAgTmdsVGFic01vZHVsZSxcbiAgICBOZ2xQb3BvdmVyc01vZHVsZSxcbiAgICBOZ2xGb3Jtc01vZHVsZSxcbiAgICBOZ2xJbnRlcm5hbE91dGxldE1vZHVsZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmdsQ29sb3JwaWNrZXJNb2R1bGUge31cbiJdfQ==