import { __decorate, __extends, __metadata } from "tslib";
import { Component, Input, ElementRef, Renderer2, ChangeDetectionStrategy } from '@angular/core';
var NglButtonStateOn = /** @class */ (function () {
    function NglButtonStateOn(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.renderer.addClass(this.el.nativeElement, this.getHostClass());
    }
    NglButtonStateOn.prototype.getHostClass = function () {
        return 'slds-text-selected';
    };
    NglButtonStateOn.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglButtonStateOn.prototype, "iconName", void 0);
    NglButtonStateOn = __decorate([
        Component({
            selector: 'ngl-state-on',
            template: "\n<svg class=\"slds-button__icon slds-button__icon_small slds-button__icon_left\" *ngIf=\"iconName\" [nglIconName]=\"iconName\"></svg>\n<ng-content></ng-content>",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], NglButtonStateOn);
    return NglButtonStateOn;
}());
export { NglButtonStateOn };
var NglButtonStateOff = /** @class */ (function (_super) {
    __extends(NglButtonStateOff, _super);
    function NglButtonStateOff() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NglButtonStateOff.prototype.getHostClass = function () {
        return 'slds-text-not-selected';
    };
    NglButtonStateOff = __decorate([
        Component({
            selector: 'ngl-state-off',
            template: "\n<svg class=\"slds-button__icon slds-button__icon_small slds-button__icon_left\" *ngIf=\"iconName\" [nglIconName]=\"iconName\"></svg>\n<ng-content></ng-content>",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], NglButtonStateOff);
    return NglButtonStateOff;
}(NglButtonStateOn));
export { NglButtonStateOff };
var NglButtonStateHover = /** @class */ (function (_super) {
    __extends(NglButtonStateHover, _super);
    function NglButtonStateHover() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NglButtonStateHover.prototype.getHostClass = function () {
        return 'slds-text-selected-focus';
    };
    NglButtonStateHover = __decorate([
        Component({
            selector: 'ngl-state-hover',
            template: "\n<svg class=\"slds-button__icon slds-button__icon_small slds-button__icon_left\" *ngIf=\"iconName\" [nglIconName]=\"iconName\"></svg>\n<ng-content></ng-content>",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], NglButtonStateHover);
    return NglButtonStateHover;
}(NglButtonStateOn));
export { NglButtonStateHover };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLXN0YXRlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWxpZ2h0bmluZy8iLCJzb3VyY2VzIjpbImxpYi9idXR0b25zL2J1dHRvbi1zdGF0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPakc7SUFRRSwwQkFBb0IsRUFBYyxFQUFVLFFBQW1CO1FBQTNDLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQzdELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFFUyx1Q0FBWSxHQUF0QjtRQUNFLE9BQU8sb0JBQW9CLENBQUM7SUFDOUIsQ0FBQzs7Z0JBTnVCLFVBQVU7Z0JBQW9CLFNBQVM7O0lBRnREO1FBQVIsS0FBSyxFQUFFOztzREFBa0I7SUFOZixnQkFBZ0I7UUFMNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGNBQWM7WUFDeEIsNktBQW1DO1lBQ25DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1NBQ2hELENBQUM7eUNBU3dCLFVBQVUsRUFBb0IsU0FBUztPQVJwRCxnQkFBZ0IsQ0FlNUI7SUFBRCx1QkFBQztDQUFBLEFBZkQsSUFlQztTQWZZLGdCQUFnQjtBQXNCN0I7SUFBdUMscUNBQWdCO0lBQXZEOztJQUlBLENBQUM7SUFIVyx3Q0FBWSxHQUF0QjtRQUNFLE9BQU8sd0JBQXdCLENBQUM7SUFDbEMsQ0FBQztJQUhVLGlCQUFpQjtRQUw3QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZUFBZTtZQUN6Qiw2S0FBbUM7WUFDbkMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztPQUNXLGlCQUFpQixDQUk3QjtJQUFELHdCQUFDO0NBQUEsQUFKRCxDQUF1QyxnQkFBZ0IsR0FJdEQ7U0FKWSxpQkFBaUI7QUFXOUI7SUFBeUMsdUNBQWdCO0lBQXpEOztJQUlBLENBQUM7SUFIVywwQ0FBWSxHQUF0QjtRQUNFLE9BQU8sMEJBQTBCLENBQUM7SUFDcEMsQ0FBQztJQUhVLG1CQUFtQjtRQUwvQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLDZLQUFtQztZQUNuQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtTQUNoRCxDQUFDO09BQ1csbUJBQW1CLENBSS9CO0lBQUQsMEJBQUM7Q0FBQSxBQUpELENBQXlDLGdCQUFnQixHQUl4RDtTQUpZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmdsLXN0YXRlLW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2J1dHRvbi1zdGF0ZXMuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xCdXR0b25TdGF0ZU9uIHtcblxuICAvKipcbiAgICogTERTIG5hbWUgb2YgdGhlIGljb24uXG4gICAqIE5hbWVzIGFyZSB3cml0dGVuIGluIHRoZSBmb3JtYXQgJ3V0aWxpdHk6ZG93bicgd2hlcmUgJ3V0aWxpdHknIGlzIHRoZSBjYXRlZ29yeSwgYW5kICdkb3duJyBpcyB0aGUgc3BlY2lmaWMgaWNvbiB0byBiZSBkaXNwbGF5ZWQuXG4gICAqL1xuICBASW5wdXQoKSBpY29uTmFtZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLmdldEhvc3RDbGFzcygpKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRIb3N0Q2xhc3MoKSB7XG4gICAgcmV0dXJuICdzbGRzLXRleHQtc2VsZWN0ZWQnO1xuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nbC1zdGF0ZS1vZmYnLFxuICB0ZW1wbGF0ZVVybDogJy4vYnV0dG9uLXN0YXRlcy5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5nbEJ1dHRvblN0YXRlT2ZmIGV4dGVuZHMgTmdsQnV0dG9uU3RhdGVPbiB7XG4gIHByb3RlY3RlZCBnZXRIb3N0Q2xhc3MoKSB7XG4gICAgcmV0dXJuICdzbGRzLXRleHQtbm90LXNlbGVjdGVkJztcbiAgfVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ2wtc3RhdGUtaG92ZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vYnV0dG9uLXN0YXRlcy5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5nbEJ1dHRvblN0YXRlSG92ZXIgZXh0ZW5kcyBOZ2xCdXR0b25TdGF0ZU9uIHtcbiAgcHJvdGVjdGVkIGdldEhvc3RDbGFzcygpIHtcbiAgICByZXR1cm4gJ3NsZHMtdGV4dC1zZWxlY3RlZC1mb2N1cyc7XG4gIH1cbn1cbiJdfQ==