import { __decorate, __metadata, __read } from "tslib";
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, Renderer2, HostBinding, OnInit, OnChanges } from '@angular/core';
import { HostService } from '../common/host/host.service';
var NglAvatar = /** @class */ (function () {
    function NglAvatar(element, renderer, hostService) {
        this.element = element;
        this.hostService = hostService;
        this.src = '';
        this.alternativeText = '';
        this.fallbackIconName = 'standard:user';
        this.error = new EventEmitter();
        this._imgError = false;
        renderer.addClass(element.nativeElement, 'slds-avatar');
    }
    NglAvatar.prototype.fallbackIconClass = function () {
        var _a = __read(this.fallbackIconName.split(':'), 2), category = _a[0], icon = _a[1];
        return "slds-icon-" + category + "-" + icon;
    };
    Object.defineProperty(NglAvatar.prototype, "shouldShowImage", {
        get: function () {
            return this.src && !this._imgError;
        },
        enumerable: true,
        configurable: true
    });
    NglAvatar.prototype.onImgError = function () {
        this._imgError = true;
        this.error.emit();
    };
    NglAvatar.prototype.ngOnInit = function () {
        this.setHostClass();
    };
    NglAvatar.prototype.ngOnChanges = function () {
        this.setHostClass();
    };
    NglAvatar.prototype.setHostClass = function () {
        var _a;
        this.hostService.updateClass(this.element, (_a = {},
            _a["slds-avatar_" + (this.size || 'medium')] = true,
            _a["slds-avatar_" + (this.variant || 'rectangle')] = true,
            _a));
    };
    NglAvatar.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: HostService }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglAvatar.prototype, "src", void 0);
    __decorate([
        HostBinding('attr.title'),
        Input(),
        __metadata("design:type", Object)
    ], NglAvatar.prototype, "alternativeText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglAvatar.prototype, "size", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglAvatar.prototype, "variant", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NglAvatar.prototype, "initials", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NglAvatar.prototype, "fallbackIconName", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], NglAvatar.prototype, "error", void 0);
    NglAvatar = __decorate([
        Component({
            selector: 'ngl-avatar',
            changeDetection: ChangeDetectionStrategy.OnPush,
            template: "<img *ngIf=\"shouldShowImage; else template_initials\" [src]=\"src\" [alt]=\"alternativeText\" (error)=\"onImgError()\">\n<ng-template #template_initials><abbr class=\"slds-avatar__initials\" [ngClass]=\"fallbackIconClass()\">{{ initials }}</abbr></ng-template>",
            providers: [HostService]
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2, HostService])
    ], NglAvatar);
    return NglAvatar;
}());
export { NglAvatar };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2F2YXRhci9hdmF0YXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsdUJBQXVCLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2SixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFRMUQ7SUF3QkUsbUJBQW9CLE9BQW1CLEVBQUUsUUFBbUIsRUFBVSxXQUF3QjtRQUExRSxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQStCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBdkJyRixRQUFHLEdBQUcsRUFBRSxDQUFDO1FBR1Qsb0JBQWUsR0FBRyxFQUFFLENBQUM7UUFjckIscUJBQWdCLEdBQUcsZUFBZSxDQUFDO1FBRWxDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTdCLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFHeEIsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFRCxxQ0FBaUIsR0FBakI7UUFDUSxJQUFBLGdEQUFtRCxFQUFsRCxnQkFBUSxFQUFFLFlBQXdDLENBQUM7UUFDMUQsT0FBTyxlQUFhLFFBQVEsU0FBSSxJQUFNLENBQUM7SUFDekMsQ0FBQztJQUVELHNCQUFJLHNDQUFlO2FBQW5CO1lBQ0UsT0FBTyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTtJQUVELDhCQUFVLEdBQVY7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCw0QkFBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCwrQkFBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFTyxnQ0FBWSxHQUFwQjs7UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTztZQUN2QyxHQUFDLGtCQUFlLElBQUksQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFFLElBQUcsSUFBSTtZQUM5QyxHQUFDLGtCQUFlLElBQUksQ0FBQyxPQUFPLElBQUksV0FBVyxDQUFFLElBQUcsSUFBSTtnQkFDcEQsQ0FBQztJQUNMLENBQUM7O2dCQS9CNEIsVUFBVTtnQkFBWSxTQUFTO2dCQUF1QixXQUFXOztJQXZCckY7UUFBUixLQUFLLEVBQUU7OzBDQUFVO0lBR1Q7UUFEUixXQUFXLENBQUMsWUFBWSxDQUFDO1FBQ3pCLEtBQUssRUFBRTs7c0RBQXNCO0lBS3JCO1FBQVIsS0FBSyxFQUFFOzsyQ0FBYztJQUtiO1FBQVIsS0FBSyxFQUFFOzs4Q0FBaUI7SUFFaEI7UUFBUixLQUFLLEVBQUU7OytDQUFrQjtJQUVqQjtRQUFSLEtBQUssRUFBRTs7dURBQW9DO0lBRWxDO1FBQVQsTUFBTSxFQUFFOzs0Q0FBNEI7SUFwQjFCLFNBQVM7UUFOckIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFlBQVk7WUFDdEIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsaVJBQTRCO1lBQzVCLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQztTQUN6QixDQUFDO3lDQXlCNkIsVUFBVSxFQUFZLFNBQVMsRUFBdUIsV0FBVztPQXhCbkYsU0FBUyxDQXdEckI7SUFBRCxnQkFBQztDQUFBLEFBeERELElBd0RDO1NBeERZLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgSG9zdEJpbmRpbmcsIE9uSW5pdCwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIb3N0U2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9ob3N0L2hvc3Quc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nbC1hdmF0YXInLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGVVcmw6ICcuL2F2YXRhci5odG1sJyxcbiAgcHJvdmlkZXJzOiBbSG9zdFNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xBdmF0YXIgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHNyYyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci50aXRsZScpXG4gIEBJbnB1dCgpIGFsdGVybmF0aXZlVGV4dCA9ICcnO1xuXG4gIC8qXG4gICAqIFRoZSBzaXplIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG5cbiAgLypcbiAgICogVGhlIHZhcmlhbnQgY2hhbmdlcyB0aGUgc2hhcGUgb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIEBJbnB1dCgpIHZhcmlhbnQ6IHN0cmluZztcblxuICBASW5wdXQoKSBpbml0aWFsczogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGZhbGxiYWNrSWNvbk5hbWUgPSAnc3RhbmRhcmQ6dXNlcic7XG5cbiAgQE91dHB1dCgpIGVycm9yID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHByaXZhdGUgX2ltZ0Vycm9yID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBwcml2YXRlIGhvc3RTZXJ2aWNlOiBIb3N0U2VydmljZSkge1xuICAgIHJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3NsZHMtYXZhdGFyJyk7XG4gIH1cblxuICBmYWxsYmFja0ljb25DbGFzcygpIHtcbiAgICBjb25zdCBbY2F0ZWdvcnksIGljb25dID0gdGhpcy5mYWxsYmFja0ljb25OYW1lLnNwbGl0KCc6Jyk7XG4gICAgcmV0dXJuIGBzbGRzLWljb24tJHtjYXRlZ29yeX0tJHtpY29ufWA7XG4gIH1cblxuICBnZXQgc2hvdWxkU2hvd0ltYWdlKCkge1xuICAgIHJldHVybiB0aGlzLnNyYyAmJiAhdGhpcy5faW1nRXJyb3I7XG4gIH1cblxuICBvbkltZ0Vycm9yKCkge1xuICAgIHRoaXMuX2ltZ0Vycm9yID0gdHJ1ZTtcbiAgICB0aGlzLmVycm9yLmVtaXQoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0SG9zdENsYXNzKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLnNldEhvc3RDbGFzcygpO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRIb3N0Q2xhc3MoKSB7XG4gICAgdGhpcy5ob3N0U2VydmljZS51cGRhdGVDbGFzcyh0aGlzLmVsZW1lbnQsIHtcbiAgICAgIFtgc2xkcy1hdmF0YXJfJHt0aGlzLnNpemUgfHwgJ21lZGl1bSd9YF06IHRydWUsXG4gICAgICBbYHNsZHMtYXZhdGFyXyR7dGhpcy52YXJpYW50IHx8ICdyZWN0YW5nbGUnfWBdOiB0cnVlLFxuICAgIH0pO1xuICB9XG59XG4iXX0=