import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy, TemplateRef, ElementRef, Renderer2, OnInit } from '@angular/core';
import { InputBoolean } from '../util/convert';
var NglFormLabel = /** @class */ (function () {
    function NglFormLabel(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.klass = 'slds-form-element__label';
    }
    NglFormLabel.prototype.ngOnInit = function () {
        this.renderer.addClass(this.element.nativeElement, this.klass);
    };
    NglFormLabel.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input('nglFormLabel'),
        __metadata("design:type", Object)
    ], NglFormLabel.prototype, "label", void 0);
    __decorate([
        Input('nglFormLabelClass'),
        __metadata("design:type", Object)
    ], NglFormLabel.prototype, "klass", void 0);
    __decorate([
        Input(), InputBoolean(),
        __metadata("design:type", Boolean)
    ], NglFormLabel.prototype, "required", void 0);
    NglFormLabel = __decorate([
        Component({
            // tslint:disable-next-line:component-selector
            selector: 'label[nglFormLabel]',
            template: "<abbr class=\"slds-required\" *ngIf=\"required\" title=\"Required\">*</abbr><span [nglInternalOutlet]=\"label\"></span>\n<ng-content></ng-content>",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], NglFormLabel);
    return NglFormLabel;
}());
export { NglFormLabel };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvbGFiZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFRL0M7SUFRRSxzQkFBb0IsT0FBbUIsRUFBVSxRQUFtQjtRQUFoRCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUp4QyxVQUFLLEdBQUcsMEJBQTBCLENBQUM7SUFJUSxDQUFDO0lBRXhFLCtCQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakUsQ0FBQzs7Z0JBSjRCLFVBQVU7Z0JBQW9CLFNBQVM7O0lBTjdDO1FBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7OytDQUFrQztJQUU1QjtRQUEzQixLQUFLLENBQUMsbUJBQW1CLENBQUM7OytDQUFvQztJQUV0QztRQUF4QixLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUU7O2tEQUFtQjtJQU5oQyxZQUFZO1FBTnhCLFNBQVMsQ0FBQztZQUNULDhDQUE4QztZQUM5QyxRQUFRLEVBQUUscUJBQXFCO1lBQy9CLDhKQUEyQjtZQUMzQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtTQUNoRCxDQUFDO3lDQVM2QixVQUFVLEVBQW9CLFNBQVM7T0FSekQsWUFBWSxDQWN4QjtJQUFELG1CQUFDO0NBQUEsQUFkRCxJQWNDO1NBZFksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBUZW1wbGF0ZVJlZiwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElucHV0Qm9vbGVhbiB9IGZyb20gJy4uL3V0aWwvY29udmVydCc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnbGFiZWxbbmdsRm9ybUxhYmVsXScsXG4gIHRlbXBsYXRlVXJsOiAnLi9sYWJlbC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5nbEZvcm1MYWJlbCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCduZ2xGb3JtTGFiZWwnKSBsYWJlbDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcblxuICBASW5wdXQoJ25nbEZvcm1MYWJlbENsYXNzJykga2xhc3MgPSAnc2xkcy1mb3JtLWVsZW1lbnRfX2xhYmVsJztcblxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgcmVxdWlyZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgdGhpcy5rbGFzcyk7XG4gIH1cblxufVxuIl19