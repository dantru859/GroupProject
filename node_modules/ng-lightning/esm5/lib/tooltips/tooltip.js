import { __decorate, __metadata } from "tslib";
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, TemplateRef, ElementRef, Renderer2 } from '@angular/core';
import { POSITION_MAP, getPlacementStyles } from '../util/overlay-position';
import { HostService } from '../common/host/host.service';
import { OnChange } from '../util/property-watch-decorator';
import { ngClassCombine } from '../util/util';
var NglTooltip = /** @class */ (function () {
    function NglTooltip(element, renderer, hostService, cd) {
        this.element = element;
        this.renderer = renderer;
        this.hostService = hostService;
        this.cd = cd;
        this.renderer.addClass(this.element.nativeElement, 'slds-popover');
        this.renderer.addClass(this.element.nativeElement, 'slds-popover_tooltip');
        this.renderer.setAttribute(this.element.nativeElement, 'role', 'tooltip');
    }
    NglTooltip.prototype.nglOnPropertyChange = function (prop) {
        if (prop === 'uid') {
            this.renderer.setAttribute(this.element.nativeElement, 'id', this.uid);
        }
        else if (prop === 'placement') {
            this.nubbin = POSITION_MAP[this.placement].nubbin;
            this.setHostClass();
        }
        else if (prop === 'template') {
            this.cd.markForCheck();
        }
        else if (prop === 'tooltipClass') {
            this.setHostClass();
        }
    };
    NglTooltip.prototype.setHostClass = function () {
        var _a;
        this.hostService.updateClass(this.element, ngClassCombine(this.tooltipClass, (_a = {},
            _a["slds-nubbin_" + this.nubbin] = true,
            _a)));
        this.hostService.updateStyle(this.element, getPlacementStyles(this.nubbin));
    };
    NglTooltip.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: HostService },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], NglTooltip.prototype, "template", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", String)
    ], NglTooltip.prototype, "placement", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", String)
    ], NglTooltip.prototype, "uid", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], NglTooltip.prototype, "tooltipClass", void 0);
    NglTooltip = __decorate([
        Component({
            // tslint:disable-next-line:component-selector
            selector: 'div[ngl-tooltip]',
            template: "\n<div class=\"slds-popover__body\" [nglInternalOutlet]=\"template\"></div>",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [HostService]
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2,
            HostService,
            ChangeDetectorRef])
    ], NglTooltip);
    return NglTooltip;
}());
export { NglTooltip };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWxpZ2h0bmluZy8iLCJzb3VyY2VzIjpbImxpYi90b29sdGlwcy90b29sdGlwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFILE9BQU8sRUFBYSxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzVELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFTOUM7SUFZRSxvQkFBb0IsT0FBbUIsRUFDbkIsUUFBbUIsRUFDbkIsV0FBd0IsRUFDeEIsRUFBcUI7UUFIckIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUNuQixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQ25CLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCx3Q0FBbUIsR0FBbkIsVUFBb0IsSUFBSTtRQUN0QixJQUFJLElBQUksS0FBSyxLQUFLLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4RTthQUFNLElBQUksSUFBSSxLQUFLLFdBQVcsRUFBRTtZQUMvQixJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQ2xELElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNyQjthQUFNLElBQUksSUFBSSxLQUFLLFVBQVUsRUFBRTtZQUM5QixJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3hCO2FBQU0sSUFBSSxJQUFJLEtBQUssY0FBYyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNyQjtJQUNMLENBQUM7SUFFUyxpQ0FBWSxHQUFwQjs7UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBWTtZQUN6RSxHQUFDLGlCQUFlLElBQUksQ0FBQyxNQUFRLElBQUcsSUFBSTtnQkFDcEMsQ0FBQyxDQUFDO1FBRUosSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5RSxDQUFDOztnQkE1QjRCLFVBQVU7Z0JBQ1QsU0FBUztnQkFDTixXQUFXO2dCQUNwQixpQkFBaUI7O0lBYjdCO1FBQVgsUUFBUSxFQUFFOztnREFBc0M7SUFFckM7UUFBWCxRQUFRLEVBQUU7O2lEQUFzQjtJQUVwQjtRQUFaLFFBQVEsRUFBRTs7MkNBQWM7SUFFWjtRQUFaLFFBQVEsRUFBRTs7b0RBQW9CO0lBUnBCLFVBQVU7UUFQdEIsU0FBUyxDQUFDO1lBQ1QsOENBQThDO1lBQzlDLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsdUZBQTZCO1lBQzdCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQztTQUN6QixDQUFDO3lDQWE2QixVQUFVO1lBQ1QsU0FBUztZQUNOLFdBQVc7WUFDcEIsaUJBQWlCO09BZjlCLFVBQVUsQ0F5Q3RCO0lBQUQsaUJBQUM7Q0FBQSxBQXpDRCxJQXlDQztTQXpDWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIFRlbXBsYXRlUmVmLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBsYWNlbWVudCwgUE9TSVRJT05fTUFQLCBnZXRQbGFjZW1lbnRTdHlsZXMgfSBmcm9tICcuLi91dGlsL292ZXJsYXktcG9zaXRpb24nO1xuaW1wb3J0IHsgSG9zdFNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vaG9zdC9ob3N0LnNlcnZpY2UnO1xuaW1wb3J0IHsgT25DaGFuZ2UgfSBmcm9tICcuLi91dGlsL3Byb3BlcnR5LXdhdGNoLWRlY29yYXRvcic7XG5pbXBvcnQgeyBuZ0NsYXNzQ29tYmluZSB9IGZyb20gJy4uL3V0aWwvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnZGl2W25nbC10b29sdGlwXScsXG4gIHRlbXBsYXRlVXJsOiAnLi90b29sdGlwLmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJvdmlkZXJzOiBbSG9zdFNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xUb29sdGlwIHtcblxuICBAT25DaGFuZ2UoKSB0ZW1wbGF0ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD47XG5cbiAgQE9uQ2hhbmdlKCkgcGxhY2VtZW50OiBQbGFjZW1lbnQ7XG5cbiAgQE9uQ2hhbmdlKCkgIHVpZDogc3RyaW5nO1xuXG4gIEBPbkNoYW5nZSgpICB0b29sdGlwQ2xhc3M6IGFueTtcblxuICBwcml2YXRlIG51YmJpbjogUGxhY2VtZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgICAgICAgICAgICBwcml2YXRlIGhvc3RTZXJ2aWNlOiBIb3N0U2VydmljZSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnc2xkcy1wb3BvdmVyJyk7XG4gICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3NsZHMtcG9wb3Zlcl90b29sdGlwJyk7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdyb2xlJywgJ3Rvb2x0aXAnKTtcbiAgfVxuXG4gIG5nbE9uUHJvcGVydHlDaGFuZ2UocHJvcCkge1xuICAgIGlmIChwcm9wID09PSAndWlkJykge1xuICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdpZCcsIHRoaXMudWlkKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdwbGFjZW1lbnQnKSB7XG4gICAgICB0aGlzLm51YmJpbiA9IFBPU0lUSU9OX01BUFt0aGlzLnBsYWNlbWVudF0ubnViYmluO1xuICAgICAgdGhpcy5zZXRIb3N0Q2xhc3MoKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgPT09ICd0ZW1wbGF0ZScpIHtcbiAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgfSBlbHNlIGlmIChwcm9wID09PSAndG9vbHRpcENsYXNzJykge1xuICAgICAgdGhpcy5zZXRIb3N0Q2xhc3MoKTtcbiAgICB9XG59XG5cbiAgcHJpdmF0ZSBzZXRIb3N0Q2xhc3MoKSB7XG4gICAgdGhpcy5ob3N0U2VydmljZS51cGRhdGVDbGFzcyh0aGlzLmVsZW1lbnQsIG5nQ2xhc3NDb21iaW5lKHRoaXMudG9vbHRpcENsYXNzLCB7XG4gICAgICBbYHNsZHMtbnViYmluXyR7dGhpcy5udWJiaW59YF06IHRydWUsXG4gICAgfSkpO1xuXG4gICAgdGhpcy5ob3N0U2VydmljZS51cGRhdGVTdHlsZSh0aGlzLmVsZW1lbnQsIGdldFBsYWNlbWVudFN0eWxlcyh0aGlzLm51YmJpbikpO1xuICB9XG59XG4iXX0=