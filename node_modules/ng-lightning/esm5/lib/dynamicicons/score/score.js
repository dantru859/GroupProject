import { __decorate, __extends, __metadata } from "tslib";
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { BaseDynamicIconComponent } from '../base-dynamic-icon';
var NglDynamicIconScore = /** @class */ (function (_super) {
    __extends(NglDynamicIconScore, _super);
    function NglDynamicIconScore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(NglDynamicIconScore.prototype, "option", {
        get: function () {
            return this._option;
        },
        set: function (option) {
            this._option = option || 'positive';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], NglDynamicIconScore.prototype, "option", null);
    NglDynamicIconScore = __decorate([
        Component({
            selector: 'ngl-dynamic-icon-score',
            template: "<span class=\"slds-icon-score\" [attr.data-slds-state]=\"option\">\n  <svg class=\"slds-icon-score__positive\" viewBox=\"0 0 5 5\" aria-hidden=\"true\">\n    <circle cx=\"50%\" cy=\"50%\" r=\"1.875\"></circle>\n  </svg>\n  <svg class=\"slds-icon-score__negative\" viewBox=\"0 0 5 5\" aria-hidden=\"true\">\n    <circle cx=\"50%\" cy=\"50%\" r=\"1.875\"></circle>\n  </svg><span class=\"slds-assistive-text\" *ngIf=\"alternativeText\">{{alternativeText}}</span></span>",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], NglDynamicIconScore);
    return NglDynamicIconScore;
}(BaseDynamicIconComponent));
export { NglDynamicIconScore };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NvcmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvZHluYW1pY2ljb25zL3Njb3JlL3Njb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQVNoRTtJQUF5Qyx1Q0FBd0I7SUFBakU7O0lBV0EsQ0FBQztJQVRVLHNCQUFJLHVDQUFNO2FBR25CO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3RCLENBQUM7YUFMUSxVQUFXLE1BQWlDO1lBQ25ELElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxJQUFJLFVBQVUsQ0FBQztRQUN0QyxDQUFDOzs7T0FBQTtJQUZRO1FBQVIsS0FBSyxFQUFFOzs7cURBRVA7SUFKVSxtQkFBbUI7UUFML0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHdCQUF3QjtZQUNsQywrZEFBMkI7WUFDM0IsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztPQUNXLG1CQUFtQixDQVcvQjtJQUFELDBCQUFDO0NBQUEsQUFYRCxDQUF5Qyx3QkFBd0IsR0FXaEU7U0FYWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUR5bmFtaWNJY29uQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS1keW5hbWljLWljb24nO1xuXG5leHBvcnQgdHlwZSBOZ2xEeW5hbWljSWNvblNjb3JlT3B0aW9uID0gJ3Bvc2l0aXZlJyB8ICduZWdhdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nbC1keW5hbWljLWljb24tc2NvcmUnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2NvcmUuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xEeW5hbWljSWNvblNjb3JlIGV4dGVuZHMgQmFzZUR5bmFtaWNJY29uQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBzZXQgb3B0aW9uKG9wdGlvbjogTmdsRHluYW1pY0ljb25TY29yZU9wdGlvbikge1xuICAgIHRoaXMuX29wdGlvbiA9IG9wdGlvbiB8fCAncG9zaXRpdmUnO1xuICB9XG4gIGdldCBvcHRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX29wdGlvbjtcbiAgfVxuXG4gIHByaXZhdGUgX29wdGlvbjogTmdsRHluYW1pY0ljb25TY29yZU9wdGlvbjtcblxufVxuIl19