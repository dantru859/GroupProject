import { __decorate, __extends, __metadata } from "tslib";
import { Component, ElementRef, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { NglCommonNotify } from '../common/notify/notify';
var NglAlert = /** @class */ (function (_super) {
    __extends(NglAlert, _super);
    function NglAlert(element, renderer, cd) {
        return _super.call(this, element, renderer, cd, 'alert') || this;
    }
    NglAlert.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef }
    ]; };
    NglAlert = __decorate([
        Component({
            selector: 'ngl-alert',
            template: "<span class=\"slds-assistive-text\">{{assistiveText || variant}}</span>\n<ngl-icon class=\"slds-m-right_x-small\" *ngIf=\"iconName\" [iconName]=\"iconName\" size=\"x-small\" variant=\"\"></ngl-icon>\n<div class=\"slds-notify__content\">\n  <ng-content></ng-content>\n</div>\n<button class=\"slds-button slds-button_icon slds-notify__close slds-button_icon-inverse\" *ngIf=\"dismissible\" type=\"button\" (click)=\"close('button', $event)\">\n  <svg class=\"slds-button__icon\" nglIconName=\"utility:close\"></svg><span class=\"slds-assistive-text\" *ngIf=\"closeButtonAssistiveText\">{{closeButtonAssistiveText}}</span>\n</button>",
            changeDetection: ChangeDetectionStrategy.OnPush,
            exportAs: 'nglAlert'
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2, ChangeDetectorRef])
    ], NglAlert);
    return NglAlert;
}(NglCommonNotify));
export { NglAlert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvYWxlcnQvYWxlcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFRMUQ7SUFBOEIsNEJBQWU7SUFFM0Msa0JBQVksT0FBbUIsRUFBRSxRQUFtQixFQUFFLEVBQXFCO2VBQ3pFLGtCQUFNLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLE9BQU8sQ0FBQztJQUN2QyxDQUFDOztnQkFGb0IsVUFBVTtnQkFBWSxTQUFTO2dCQUFNLGlCQUFpQjs7SUFGaEUsUUFBUTtRQU5wQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztZQUNyQixrb0JBQTJCO1lBQzNCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFFBQVEsRUFBRSxVQUFVO1NBQ3JCLENBQUM7eUNBR3FCLFVBQVUsRUFBWSxTQUFTLEVBQU0saUJBQWlCO09BRmhFLFFBQVEsQ0FNcEI7SUFBRCxlQUFDO0NBQUEsQUFORCxDQUE4QixlQUFlLEdBTTVDO1NBTlksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nbENvbW1vbk5vdGlmeSB9IGZyb20gJy4uL2NvbW1vbi9ub3RpZnkvbm90aWZ5JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmdsLWFsZXJ0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FsZXJ0Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZXhwb3J0QXM6ICduZ2xBbGVydCcsXG59KVxuZXhwb3J0IGNsYXNzIE5nbEFsZXJ0IGV4dGVuZHMgTmdsQ29tbW9uTm90aWZ5IHtcblxuICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgICBzdXBlcihlbGVtZW50LCByZW5kZXJlciwgY2QsICdhbGVydCcpO1xuICB9XG5cbn1cbiJdfQ==