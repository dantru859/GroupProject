import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { OverlayModule } from '@angular/cdk/overlay';
import { NglIconsModule } from '../icons/module';
import { NglInternalOutletModule } from '../util/outlet.module';
import { NglClickOutsideModule } from '../common/clickoutside.module';
import { NglDatepicker } from './datepicker';
import { NglDatepickerInput } from './input/datepicker-input';
import { NglDatepickerWeekdays } from './weekdays';
import { NglDay } from './day';
import { NglDatepickerYear } from './year';
import { NglDatepickerMonth } from './month';
import { NglDateAdapter } from './adapters/date-fns-adapter';
import { NglOverlayModule } from '../common/overlay/overlay.module';
var EXPORTS = [
    NglDatepicker, NglDatepickerInput
];
var NglDatepickersModule = /** @class */ (function () {
    function NglDatepickersModule() {
    }
    NglDatepickersModule = __decorate([
        NgModule({
            declarations: __spread(EXPORTS, [NglDay, NglDatepickerWeekdays, NglDatepickerYear, NglDatepickerMonth]),
            exports: EXPORTS,
            imports: [
                CommonModule,
                FormsModule,
                NglIconsModule,
                NglInternalOutletModule,
                OverlayModule,
                NglClickOutsideModule,
                NglOverlayModule,
            ],
            providers: [NglDateAdapter],
        })
    ], NglDatepickersModule);
    return NglDatepickersModule;
}());
export { NglDatepickersModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2RhdGVwaWNrZXJzL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM3QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUU5RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVwRSxJQUFNLE9BQU8sR0FBRztJQUNkLGFBQWEsRUFBRSxrQkFBa0I7Q0FDbEMsQ0FBQztBQWdCRjtJQUFBO0lBQW1DLENBQUM7SUFBdkIsb0JBQW9CO1FBZGhDLFFBQVEsQ0FBQztZQUNSLFlBQVksV0FBTSxPQUFPLEdBQUUsTUFBTSxFQUFFLHFCQUFxQixFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFDO1lBQ2hHLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLE9BQU8sRUFBRTtnQkFDUCxZQUFZO2dCQUNaLFdBQVc7Z0JBQ1gsY0FBYztnQkFDZCx1QkFBdUI7Z0JBQ3ZCLGFBQWE7Z0JBQ2IscUJBQXFCO2dCQUNyQixnQkFBZ0I7YUFDakI7WUFDRCxTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUM7U0FDNUIsQ0FBQztPQUNXLG9CQUFvQixDQUFHO0lBQUQsMkJBQUM7Q0FBQSxBQUFwQyxJQUFvQztTQUF2QixvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IE5nbEljb25zTW9kdWxlIH0gZnJvbSAnLi4vaWNvbnMvbW9kdWxlJztcbmltcG9ydCB7IE5nbEludGVybmFsT3V0bGV0TW9kdWxlIH0gZnJvbSAnLi4vdXRpbC9vdXRsZXQubW9kdWxlJztcbmltcG9ydCB7IE5nbENsaWNrT3V0c2lkZU1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jbGlja291dHNpZGUubW9kdWxlJztcblxuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlciB9IGZyb20gJy4vZGF0ZXBpY2tlcic7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VySW5wdXQgfSBmcm9tICcuL2lucHV0L2RhdGVwaWNrZXItaW5wdXQnO1xuXG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VyV2Vla2RheXMgfSBmcm9tICcuL3dlZWtkYXlzJztcbmltcG9ydCB7IE5nbERheSB9IGZyb20gJy4vZGF5JztcbmltcG9ydCB7IE5nbERhdGVwaWNrZXJZZWFyIH0gZnJvbSAnLi95ZWFyJztcbmltcG9ydCB7IE5nbERhdGVwaWNrZXJNb250aCB9IGZyb20gJy4vbW9udGgnO1xuXG5pbXBvcnQgeyBOZ2xEYXRlQWRhcHRlciB9IGZyb20gJy4vYWRhcHRlcnMvZGF0ZS1mbnMtYWRhcHRlcic7XG5pbXBvcnQgeyBOZ2xPdmVybGF5TW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL292ZXJsYXkvb3ZlcmxheS5tb2R1bGUnO1xuXG5jb25zdCBFWFBPUlRTID0gW1xuICBOZ2xEYXRlcGlja2VyLCBOZ2xEYXRlcGlja2VySW5wdXRcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLkVYUE9SVFMsIE5nbERheSwgTmdsRGF0ZXBpY2tlcldlZWtkYXlzLCBOZ2xEYXRlcGlja2VyWWVhciwgTmdsRGF0ZXBpY2tlck1vbnRoXSxcbiAgZXhwb3J0czogRVhQT1JUUyxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2xJY29uc01vZHVsZSxcbiAgICBOZ2xJbnRlcm5hbE91dGxldE1vZHVsZSxcbiAgICBPdmVybGF5TW9kdWxlLFxuICAgIE5nbENsaWNrT3V0c2lkZU1vZHVsZSxcbiAgICBOZ2xPdmVybGF5TW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtOZ2xEYXRlQWRhcHRlcl0sXG59KVxuZXhwb3J0IGNsYXNzIE5nbERhdGVwaWNrZXJzTW9kdWxlIHt9XG4iXX0=