import { ElementRef, EventEmitter, AfterViewInit, OnDestroy } from '@angular/core';
import { IHSV } from '../../util';
import * as ɵngcc0 from '@angular/core';
export declare class NglColorpickerRange implements AfterViewInit, OnDestroy {
    private document;
    set hsv(hsv: IHSV);
    get hsv(): IHSV;
    hsvChange: EventEmitter<IHSV>;
    rangeIndicator: ElementRef;
    rangeIndicatorContainer: ElementRef;
    uid: string;
    get hex(): string;
    private _hsv;
    private dragSubscription;
    constructor(document: any);
    ngAfterViewInit(): void;
    hueSliderChange(value: number): void;
    rangeIndicatorKeyboard(evt: KeyboardEvent): void;
    indicatorStyle(): {
        'bottom.%': number;
        'left.%': number;
        'background': string;
    };
    ngOnDestroy(): void;
    private emitChange;
    private limit;
    private setupDrag;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NglColorpickerRange, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NglColorpickerRange, "ngl-colorpicker-range", never, { "hsv": "hsv"; }, { "hsvChange": "hsvChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JwaWNrZXItcmFuZ2UuZC50cyIsInNvdXJjZXMiOlsiY29sb3JwaWNrZXItcmFuZ2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUhTViB9IGZyb20gJy4uLy4uL3V0aWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmdsQ29sb3JwaWNrZXJSYW5nZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBkb2N1bWVudDtcbiAgICBzZXQgaHN2KGhzdjogSUhTVik7XG4gICAgZ2V0IGhzdigpOiBJSFNWO1xuICAgIGhzdkNoYW5nZTogRXZlbnRFbWl0dGVyPElIU1Y+O1xuICAgIHJhbmdlSW5kaWNhdG9yOiBFbGVtZW50UmVmO1xuICAgIHJhbmdlSW5kaWNhdG9yQ29udGFpbmVyOiBFbGVtZW50UmVmO1xuICAgIHVpZDogc3RyaW5nO1xuICAgIGdldCBoZXgoKTogc3RyaW5nO1xuICAgIHByaXZhdGUgX2hzdjtcbiAgICBwcml2YXRlIGRyYWdTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZG9jdW1lbnQ6IGFueSk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgaHVlU2xpZGVyQ2hhbmdlKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xuICAgIHJhbmdlSW5kaWNhdG9yS2V5Ym9hcmQoZXZ0OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBpbmRpY2F0b3JTdHlsZSgpOiB7XG4gICAgICAgICdib3R0b20uJSc6IG51bWJlcjtcbiAgICAgICAgJ2xlZnQuJSc6IG51bWJlcjtcbiAgICAgICAgJ2JhY2tncm91bmQnOiBzdHJpbmc7XG4gICAgfTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgZW1pdENoYW5nZTtcbiAgICBwcml2YXRlIGxpbWl0O1xuICAgIHByaXZhdGUgc2V0dXBEcmFnO1xufVxuIl19