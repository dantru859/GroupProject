import { EventEmitter, ElementRef, Renderer2, OnInit, OnChanges } from '@angular/core';
import { HostService } from '../common/host/host.service';
import * as ɵngcc0 from '@angular/core';
export declare class NglButtonStateful implements OnInit, OnChanges {
    private el;
    private renderer;
    private hostService;
    /**
     * Shows whether the button has been selected or not.
     */
    state: boolean;
    /**
     * Triggered when the button is clicked.
     */
    stateChange: EventEmitter<boolean>;
    /**
     * Appearance.
     */
    variant: 'brand' | 'destructive' | 'inverse' | 'neutral' | 'success' | 'text';
    private focused;
    constructor(el: ElementRef, renderer: Renderer2, hostService: HostService);
    onSelectChange(): void;
    onFocusToggle(focused: string): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    private setHostClass;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NglButtonStateful, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NglButtonStateful, "[nglButtonStateful]", never, { "variant": "variant"; "state": "state"; }, { "stateChange": "stateChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLXN0YXRlZnVsLmQudHMiLCJzb3VyY2VzIjpbImJ1dHRvbi1zdGF0ZWZ1bC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgT25Jbml0LCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhvc3RTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2hvc3QvaG9zdC5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5nbEJ1dHRvblN0YXRlZnVsIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGhvc3RTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIFNob3dzIHdoZXRoZXIgdGhlIGJ1dHRvbiBoYXMgYmVlbiBzZWxlY3RlZCBvciBub3QuXG4gICAgICovXG4gICAgc3RhdGU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkLlxuICAgICAqL1xuICAgIHN0YXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgLyoqXG4gICAgICogQXBwZWFyYW5jZS5cbiAgICAgKi9cbiAgICB2YXJpYW50OiAnYnJhbmQnIHwgJ2Rlc3RydWN0aXZlJyB8ICdpbnZlcnNlJyB8ICduZXV0cmFsJyB8ICdzdWNjZXNzJyB8ICd0ZXh0JztcbiAgICBwcml2YXRlIGZvY3VzZWQ7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGhvc3RTZXJ2aWNlOiBIb3N0U2VydmljZSk7XG4gICAgb25TZWxlY3RDaGFuZ2UoKTogdm9pZDtcbiAgICBvbkZvY3VzVG9nZ2xlKGZvY3VzZWQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIHByaXZhdGUgc2V0SG9zdENsYXNzO1xufVxuIl19