import { ElementRef, Renderer2, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { HostService } from '../common/host/host.service';
import * as ɵngcc0 from '@angular/core';
export declare class NglButton implements OnInit, OnChanges {
    private el;
    private renderer;
    private hostService;
    /**
     * Changes the appearance of the button.
     */
    variant: 'base' | 'neutral' | 'brand' | 'outline-brand' | 'destructive' | 'text-destructive' | 'inverse' | 'success';
    /**
     * LDS name of the icon.
     * Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed.
     */
    iconName: string;
    /**
     * Describes the position of the icon with respect to ng-content.
     */
    iconPosition: 'left' | 'right';
    constructor(el: ElementRef, renderer: Renderer2, hostService: HostService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    hasLeftIcon(): boolean;
    hasRightIcon(): boolean;
    private setHostClass;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NglButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NglButton, "[nglButton]", never, { "variant": "variant"; "iconPosition": "iconPosition"; "iconName": "iconName"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmQudHMiLCJzb3VyY2VzIjpbImJ1dHRvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIb3N0U2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9ob3N0L2hvc3Quc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2xCdXR0b24gaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgaG9zdFNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogQ2hhbmdlcyB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgYnV0dG9uLlxuICAgICAqL1xuICAgIHZhcmlhbnQ6ICdiYXNlJyB8ICduZXV0cmFsJyB8ICdicmFuZCcgfCAnb3V0bGluZS1icmFuZCcgfCAnZGVzdHJ1Y3RpdmUnIHwgJ3RleHQtZGVzdHJ1Y3RpdmUnIHwgJ2ludmVyc2UnIHwgJ3N1Y2Nlc3MnO1xuICAgIC8qKlxuICAgICAqIExEUyBuYW1lIG9mIHRoZSBpY29uLlxuICAgICAqIE5hbWVzIGFyZSB3cml0dGVuIGluIHRoZSBmb3JtYXQgJ3V0aWxpdHk6ZG93bicgd2hlcmUgJ3V0aWxpdHknIGlzIHRoZSBjYXRlZ29yeSwgYW5kICdkb3duJyBpcyB0aGUgc3BlY2lmaWMgaWNvbiB0byBiZSBkaXNwbGF5ZWQuXG4gICAgICovXG4gICAgaWNvbk5hbWU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBEZXNjcmliZXMgdGhlIHBvc2l0aW9uIG9mIHRoZSBpY29uIHdpdGggcmVzcGVjdCB0byBuZy1jb250ZW50LlxuICAgICAqL1xuICAgIGljb25Qb3NpdGlvbjogJ2xlZnQnIHwgJ3JpZ2h0JztcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgaG9zdFNlcnZpY2U6IEhvc3RTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIGhhc0xlZnRJY29uKCk6IGJvb2xlYW47XG4gICAgaGFzUmlnaHRJY29uKCk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBzZXRIb3N0Q2xhc3M7XG59XG4iXX0=