import { EventEmitter, ChangeDetectorRef, TemplateRef, ElementRef, Renderer2, OnInit, OnDestroy } from '@angular/core';
import { Placement } from '../util/overlay-position';
import { FocusTrapFactory } from '@angular/cdk/a11y';
import { Variant, Size } from './trigger';
import { HostService } from '../common/host/host.service';
import { isTemplateRef } from '../util/check';
import * as ɵngcc0 from '@angular/core';
export declare class NglPopover implements OnInit, OnDestroy {
    private hostService;
    element: ElementRef;
    renderer: Renderer2;
    private focusTrapFactory;
    private cd;
    template: string | TemplateRef<void>;
    header: string | TemplateRef<void>;
    footer: string | TemplateRef<void>;
    closeTitle: string;
    closeVisible: boolean;
    popoverClass: any;
    size: Size;
    variant: Variant;
    placement: Placement;
    get labelledby(): string;
    get describedby(): string;
    close: EventEmitter<any>;
    isTemplateRef: typeof isTemplateRef;
    canClose: boolean;
    uid: string;
    inverseCloseButton: boolean;
    private nubbin;
    /** The class that traps and manages focus within the dialog. */
    private focusTrap;
    constructor(hostService: HostService, element: ElementRef, renderer: Renderer2, focusTrapFactory: FocusTrapFactory, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    nglOnPropertyChange(prop: any): void;
    markForCheck(): void;
    onClose(): void;
    private setHostClass;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NglPopover, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NglPopover, "section[ngl-popover]", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5kLnRzIiwic291cmNlcyI6WyJwb3BvdmVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiwgVGVtcGxhdGVSZWYsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBsYWNlbWVudCB9IGZyb20gJy4uL3V0aWwvb3ZlcmxheS1wb3NpdGlvbic7XG5pbXBvcnQgeyBGb2N1c1RyYXBGYWN0b3J5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgVmFyaWFudCwgU2l6ZSB9IGZyb20gJy4vdHJpZ2dlcic7XG5pbXBvcnQgeyBIb3N0U2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9ob3N0L2hvc3Quc2VydmljZSc7XG5pbXBvcnQgeyBpc1RlbXBsYXRlUmVmIH0gZnJvbSAnLi4vdXRpbC9jaGVjayc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2xQb3BvdmVyIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgaG9zdFNlcnZpY2U7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgZm9jdXNUcmFwRmFjdG9yeTtcbiAgICBwcml2YXRlIGNkO1xuICAgIHRlbXBsYXRlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBoZWFkZXI6IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIGZvb3Rlcjogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgY2xvc2VUaXRsZTogc3RyaW5nO1xuICAgIGNsb3NlVmlzaWJsZTogYm9vbGVhbjtcbiAgICBwb3BvdmVyQ2xhc3M6IGFueTtcbiAgICBzaXplOiBTaXplO1xuICAgIHZhcmlhbnQ6IFZhcmlhbnQ7XG4gICAgcGxhY2VtZW50OiBQbGFjZW1lbnQ7XG4gICAgZ2V0IGxhYmVsbGVkYnkoKTogc3RyaW5nO1xuICAgIGdldCBkZXNjcmliZWRieSgpOiBzdHJpbmc7XG4gICAgY2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGlzVGVtcGxhdGVSZWY6IHR5cGVvZiBpc1RlbXBsYXRlUmVmO1xuICAgIGNhbkNsb3NlOiBib29sZWFuO1xuICAgIHVpZDogc3RyaW5nO1xuICAgIGludmVyc2VDbG9zZUJ1dHRvbjogYm9vbGVhbjtcbiAgICBwcml2YXRlIG51YmJpbjtcbiAgICAvKiogVGhlIGNsYXNzIHRoYXQgdHJhcHMgYW5kIG1hbmFnZXMgZm9jdXMgd2l0aGluIHRoZSBkaWFsb2cuICovXG4gICAgcHJpdmF0ZSBmb2N1c1RyYXA7XG4gICAgY29uc3RydWN0b3IoaG9zdFNlcnZpY2U6IEhvc3RTZXJ2aWNlLCBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBmb2N1c1RyYXBGYWN0b3J5OiBGb2N1c1RyYXBGYWN0b3J5LCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ2xPblByb3BlcnR5Q2hhbmdlKHByb3A6IGFueSk6IHZvaWQ7XG4gICAgbWFya0ZvckNoZWNrKCk6IHZvaWQ7XG4gICAgb25DbG9zZSgpOiB2b2lkO1xuICAgIHByaXZhdGUgc2V0SG9zdENsYXNzO1xufVxuIl19