import { EventEmitter, TemplateRef, OnInit, AfterContentInit } from '@angular/core';
import { NglRatingIconTemplate } from './icons';
import { NglRatingConfig } from './config';
import * as ɵngcc0 from '@angular/core';
export declare class NglRating implements OnInit, AfterContentInit {
    range: number[];
    currentRate: number;
    icon: string;
    size: 'x-small' | 'small' | 'large';
    readonly: boolean;
    set rate(rate: number);
    defaultTemplate: TemplateRef<any>;
    iconTemplate: NglRatingIconTemplate;
    set max(max: number | string);
    get max(): number | string;
    colorOn: string;
    colorOff: string;
    rateChange: EventEmitter<number>;
    hover: EventEmitter<number>;
    _template: TemplateRef<any>;
    private _max;
    private inputRate;
    constructor(defaultConfig: NglRatingConfig);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    update(value: number): void;
    enter(value: number): void;
    getFill(value: number): number;
    reset(): void;
    keyboardIncrease(evt: KeyboardEvent): void;
    keyboardDecrease(evt: KeyboardEvent): void;
    get ariaValuenow(): number;
    private setRange;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NglRating, [{ optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NglRating, "ngl-rating", never, { "icon": "icon"; "readonly": "isReadonly"; "colorOn": "colorOn"; "colorOff": "colorOff"; "rate": "rate"; "max": "max"; "size": "size"; }, { "rateChange": "rateChange"; "hover": "hover"; }, ["iconTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmF0aW5nLmQudHMiLCJzb3VyY2VzIjpbInJhdGluZy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYsIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdsUmF0aW5nSWNvblRlbXBsYXRlIH0gZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQgeyBOZ2xSYXRpbmdDb25maWcgfSBmcm9tICcuL2NvbmZpZyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2xSYXRpbmcgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQge1xuICAgIHJhbmdlOiBudW1iZXJbXTtcbiAgICBjdXJyZW50UmF0ZTogbnVtYmVyO1xuICAgIGljb246IHN0cmluZztcbiAgICBzaXplOiAneC1zbWFsbCcgfCAnc21hbGwnIHwgJ2xhcmdlJztcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICBzZXQgcmF0ZShyYXRlOiBudW1iZXIpO1xuICAgIGRlZmF1bHRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBpY29uVGVtcGxhdGU6IE5nbFJhdGluZ0ljb25UZW1wbGF0ZTtcbiAgICBzZXQgbWF4KG1heDogbnVtYmVyIHwgc3RyaW5nKTtcbiAgICBnZXQgbWF4KCk6IG51bWJlciB8IHN0cmluZztcbiAgICBjb2xvck9uOiBzdHJpbmc7XG4gICAgY29sb3JPZmY6IHN0cmluZztcbiAgICByYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICBob3ZlcjogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgX3RlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHByaXZhdGUgX21heDtcbiAgICBwcml2YXRlIGlucHV0UmF0ZTtcbiAgICBjb25zdHJ1Y3RvcihkZWZhdWx0Q29uZmlnOiBOZ2xSYXRpbmdDb25maWcpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xuICAgIGVudGVyKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xuICAgIGdldEZpbGwodmFsdWU6IG51bWJlcik6IG51bWJlcjtcbiAgICByZXNldCgpOiB2b2lkO1xuICAgIGtleWJvYXJkSW5jcmVhc2UoZXZ0OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBrZXlib2FyZERlY3JlYXNlKGV2dDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgZ2V0IGFyaWFWYWx1ZW5vdygpOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBzZXRSYW5nZTtcbn1cbiJdfQ==