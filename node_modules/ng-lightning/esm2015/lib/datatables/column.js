import { __decorate, __metadata } from "tslib";
import { Directive, Input, ContentChild } from '@angular/core';
import { NglDatatableCell } from './cell';
import { NglDatatableHeadingTemplate } from './heading';
import { InputBoolean } from '../util/convert';
let NglDatatableColumn = class NglDatatableColumn {
    constructor() {
        this.sortable = false;
        this.truncate = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], NglDatatableColumn.prototype, "heading", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NglDatatableColumn.prototype, "key", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NglDatatableColumn.prototype, "headClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NglDatatableColumn.prototype, "cellClass", void 0);
__decorate([
    Input(), InputBoolean(),
    __metadata("design:type", Object)
], NglDatatableColumn.prototype, "sortable", void 0);
__decorate([
    Input(), InputBoolean(),
    __metadata("design:type", Object)
], NglDatatableColumn.prototype, "truncate", void 0);
__decorate([
    ContentChild(NglDatatableCell),
    __metadata("design:type", NglDatatableCell)
], NglDatatableColumn.prototype, "cellTpl", void 0);
__decorate([
    ContentChild(NglDatatableHeadingTemplate),
    __metadata("design:type", NglDatatableHeadingTemplate)
], NglDatatableColumn.prototype, "headingTpl", void 0);
NglDatatableColumn = __decorate([
    Directive({
        // tslint:disable-next-line:directive-selector
        selector: 'ngl-datatable-column',
    })
], NglDatatableColumn);
export { NglDatatableColumn };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZXMvY29sdW1uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzFDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNL0MsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBa0I7SUFBL0I7UUFTMkIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixhQUFRLEdBQUcsS0FBSyxDQUFDO0lBSzVDLENBQUM7Q0FBQSxDQUFBO0FBZlU7SUFBUixLQUFLLEVBQUU7O21EQUFpQjtBQUVoQjtJQUFSLEtBQUssRUFBRTs7K0NBQWE7QUFFWjtJQUFSLEtBQUssRUFBRTs7cURBQWdCO0FBRWY7SUFBUixLQUFLLEVBQUU7O3FEQUFnQjtBQUVDO0lBQXhCLEtBQUssRUFBRSxFQUFFLFlBQVksRUFBRTs7b0RBQWtCO0FBRWpCO0lBQXhCLEtBQUssRUFBRSxFQUFFLFlBQVksRUFBRTs7b0RBQWtCO0FBRVY7SUFBL0IsWUFBWSxDQUFDLGdCQUFnQixDQUFDOzhCQUFVLGdCQUFnQjttREFBQztBQUVmO0lBQTFDLFlBQVksQ0FBQywyQkFBMkIsQ0FBQzs4QkFBYSwyQkFBMkI7c0RBQUM7QUFmeEUsa0JBQWtCO0lBSjlCLFNBQVMsQ0FBQztRQUNULDhDQUE4QztRQUM5QyxRQUFRLEVBQUUsc0JBQXNCO0tBQ2pDLENBQUM7R0FDVyxrQkFBa0IsQ0FnQjlCO1NBaEJZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIENvbnRlbnRDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdsRGF0YXRhYmxlQ2VsbCB9IGZyb20gJy4vY2VsbCc7XG5pbXBvcnQgeyBOZ2xEYXRhdGFibGVIZWFkaW5nVGVtcGxhdGUgfSBmcm9tICcuL2hlYWRpbmcnO1xuaW1wb3J0IHsgSW5wdXRCb29sZWFuIH0gZnJvbSAnLi4vdXRpbC9jb252ZXJ0JztcblxuQERpcmVjdGl2ZSh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICduZ2wtZGF0YXRhYmxlLWNvbHVtbicsXG59KVxuZXhwb3J0IGNsYXNzIE5nbERhdGF0YWJsZUNvbHVtbiB7XG4gIEBJbnB1dCgpIGhlYWRpbmc6IHN0cmluZztcblxuICBASW5wdXQoKSBrZXk6IHN0cmluZztcblxuICBASW5wdXQoKSBoZWFkQ2xhc3M6IGFueTtcblxuICBASW5wdXQoKSBjZWxsQ2xhc3M6IGFueTtcblxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgc29ydGFibGUgPSBmYWxzZTtcblxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgdHJ1bmNhdGUgPSBmYWxzZTtcblxuICBAQ29udGVudENoaWxkKE5nbERhdGF0YWJsZUNlbGwpIGNlbGxUcGw6IE5nbERhdGF0YWJsZUNlbGw7XG5cbiAgQENvbnRlbnRDaGlsZChOZ2xEYXRhdGFibGVIZWFkaW5nVGVtcGxhdGUpIGhlYWRpbmdUcGw6IE5nbERhdGF0YWJsZUhlYWRpbmdUZW1wbGF0ZTtcbn1cbiJdfQ==