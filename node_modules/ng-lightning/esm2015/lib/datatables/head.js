import { __decorate, __metadata } from "tslib";
import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, HostBinding, TemplateRef } from '@angular/core';
let NglInternalDatatableHeadCell = class NglInternalDatatableHeadCell {
    constructor() {
        this.sort = new EventEmitter();
    }
    get header() {
        return this.headingTpl || this.heading;
    }
    get attrTitle() {
        return this.heading || null;
    }
    get ariaSort() {
        return this.sortOrder ? `${this.sortOrder}ending` : 'none';
    }
    sortChange() {
        this.sort.emit(this.sortOrder === 'desc' ? 'asc' : 'desc');
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], NglInternalDatatableHeadCell.prototype, "heading", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NglInternalDatatableHeadCell.prototype, "headingTpl", void 0);
__decorate([
    HostBinding('class.slds-is-sortable'),
    Input(),
    __metadata("design:type", Boolean)
], NglInternalDatatableHeadCell.prototype, "sortable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NglInternalDatatableHeadCell.prototype, "sortOrder", void 0);
__decorate([
    HostBinding('attr.aria-sort'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], NglInternalDatatableHeadCell.prototype, "ariaSort", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NglInternalDatatableHeadCell.prototype, "sort", void 0);
NglInternalDatatableHeadCell = __decorate([
    Component({
        // tslint:disable-next-line:component-selector
        selector: 'th[nglDatatableHead]',
        template: "<a class=\"slds-th__action slds-text-link_reset\" *ngIf=\"sortable; else baseTpl\" (click)=\"sortChange()\" role=\"button\" tabindex=\"0\"><span class=\"slds-assistive-text\">Sort by:</span>\n  <div class=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\"><span class=\"slds-truncate\" [attr.title]=\"attrTitle\" [nglInternalOutlet]=\"header\"></span><span class=\"slds-icon_container slds-icon-utility-arrowdown\">\n      <svg class=\"slds-icon slds-icon-text-default slds-is-sortable__icon\" nglIconName=\"arrowdown\"></svg></span></div></a>\n<ng-template #baseTpl>\n  <div class=\"slds-truncate\" [attr.title]=\"attrTitle\" [nglInternalOutlet]=\"header\"></div>\n</ng-template>",
        changeDetection: ChangeDetectionStrategy.OnPush,
        host: {
            '[class.slds-is-sorted_asc]': `sortOrder === 'asc'`,
            '[class.slds-is-sorted_desc]': `sortOrder === 'desc'`,
            '[class.slds-is-sorted]': `!!sortOrder`,
        }
    })
], NglInternalDatatableHeadCell);
export { NglInternalDatatableHeadCell };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWxpZ2h0bmluZy8iLCJzb3VyY2VzIjpbImxpYi9kYXRhdGFibGVzL2hlYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWExSCxJQUFhLDRCQUE0QixHQUF6QyxNQUFhLDRCQUE0QjtJQUF6QztRQXVCVyxTQUFJLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUtyQyxDQUFDO0lBdkJDLElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFRRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDN0QsQ0FBQztJQUlELFVBQVU7UUFDUixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3RCxDQUFDO0NBQ0YsQ0FBQTtBQTFCVTtJQUFSLEtBQUssRUFBRTs7NkRBQWlCO0FBQ2hCO0lBQVIsS0FBSyxFQUFFOzhCQUFhLFdBQVc7Z0VBQU07QUFXN0I7SUFEUixXQUFXLENBQUMsd0JBQXdCLENBQUM7SUFDckMsS0FBSyxFQUFFOzs4REFBbUI7QUFFbEI7SUFBUixLQUFLLEVBQUU7OytEQUEyQjtBQUduQztJQURDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzs7OzREQUc3QjtBQUVRO0lBQVIsTUFBTSxFQUFFOzswREFBMEI7QUF2QnhCLDRCQUE0QjtJQVh4QyxTQUFTLENBQUM7UUFDVCw4Q0FBOEM7UUFDOUMsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyx1c0JBQTBCO1FBQzFCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLElBQUksRUFBRTtZQUNKLDRCQUE0QixFQUFFLHFCQUFxQjtZQUNuRCw2QkFBNkIsRUFBRSxzQkFBc0I7WUFDckQsd0JBQXdCLEVBQUUsYUFBYTtTQUN4QztLQUNGLENBQUM7R0FDVyw0QkFBNEIsQ0E0QnhDO1NBNUJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAndGhbbmdsRGF0YXRhYmxlSGVhZF0nLFxuICB0ZW1wbGF0ZVVybDogJy4vaGVhZC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLnNsZHMtaXMtc29ydGVkX2FzY10nOiBgc29ydE9yZGVyID09PSAnYXNjJ2AsXG4gICAgJ1tjbGFzcy5zbGRzLWlzLXNvcnRlZF9kZXNjXSc6IGBzb3J0T3JkZXIgPT09ICdkZXNjJ2AsXG4gICAgJ1tjbGFzcy5zbGRzLWlzLXNvcnRlZF0nOiBgISFzb3J0T3JkZXJgLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xJbnRlcm5hbERhdGF0YWJsZUhlYWRDZWxsIHtcblxuICBASW5wdXQoKSBoZWFkaW5nOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGhlYWRpbmdUcGw6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgZ2V0IGhlYWRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5oZWFkaW5nVHBsIHx8IHRoaXMuaGVhZGluZztcbiAgfVxuXG4gIGdldCBhdHRyVGl0bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGVhZGluZyB8fCBudWxsO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zbGRzLWlzLXNvcnRhYmxlJylcbiAgQElucHV0KCkgc29ydGFibGU6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgc29ydE9yZGVyOiAnYXNjJyB8ICdkZXNjJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1zb3J0JylcbiAgZ2V0IGFyaWFTb3J0KCkge1xuICAgIHJldHVybiB0aGlzLnNvcnRPcmRlciA/IGAke3RoaXMuc29ydE9yZGVyfWVuZGluZ2AgOiAnbm9uZSc7XG4gIH1cblxuICBAT3V0cHV0KClzb3J0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHNvcnRDaGFuZ2UoKSB7XG4gICAgdGhpcy5zb3J0LmVtaXQodGhpcy5zb3J0T3JkZXIgPT09ICdkZXNjJyA/ICdhc2MnIDogJ2Rlc2MnKTtcbiAgfVxufVxuIl19