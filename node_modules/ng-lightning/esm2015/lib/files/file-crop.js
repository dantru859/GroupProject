import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Renderer2, Input } from '@angular/core';
let NglFileCrop = class NglFileCrop {
    constructor(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.cropClass = 'slds-file__crop';
        // this.renderer.addClass(this.element.nativeElement, this.cropClass);
    }
    set nglFileCrop(ratio) {
        const nativeElement = this.element.nativeElement;
        if (this.currentRatio) {
            this.renderer.removeClass(nativeElement, `${this.cropClass}`);
            this.renderer.removeClass(nativeElement, `${this.cropClass}_${this.currentRatio}`);
        }
        if (ratio) {
            this.renderer.addClass(nativeElement, `${this.cropClass}`);
            this.renderer.addClass(nativeElement, `${this.cropClass}_${ratio}`);
        }
        this.currentRatio = ratio;
    }
};
NglFileCrop.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], NglFileCrop.prototype, "nglFileCrop", null);
NglFileCrop = __decorate([
    Directive({
        selector: '[nglFileCrop]',
    }),
    __metadata("design:paramtypes", [ElementRef, Renderer2])
], NglFileCrop);
export { NglFileCrop };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1jcm9wLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2ZpbGVzL2ZpbGUtY3JvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU94RSxJQUFhLFdBQVcsR0FBeEIsTUFBYSxXQUFXO0lBc0J0QixZQUFvQixPQUFtQixFQUFVLFFBQW1CO1FBQWhELFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBSjVELGNBQVMsR0FBRyxpQkFBaUIsQ0FBQztRQUtwQyxzRUFBc0U7SUFDeEUsQ0FBQztJQXRCUSxJQUFJLFdBQVcsQ0FBQyxLQUF1QjtRQUM5QyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUVqRCxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztTQUNwRjtRQUVELElBQUksS0FBSyxFQUFFO1lBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3JFO1FBRUQsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztDQVNGLENBQUE7O1lBSDhCLFVBQVU7WUFBb0IsU0FBUzs7QUFwQjNEO0lBQVIsS0FBSyxFQUFFOzs7OENBY1A7QUFoQlUsV0FBVztJQUh2QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZUFBZTtLQUMxQixDQUFDO3FDQXVCNkIsVUFBVSxFQUFvQixTQUFTO0dBdEJ6RCxXQUFXLENBeUJ2QjtTQXpCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIE5nbEZpbGVDcm9wVmFsdWUgPSAnMTYtYnktOScgfCAnNC1ieS0zJyB8ICcxLWJ5LTEnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmdsRmlsZUNyb3BdJyxcbn0pXG5leHBvcnQgY2xhc3MgTmdsRmlsZUNyb3Age1xuXG4gIEBJbnB1dCgpIHNldCBuZ2xGaWxlQ3JvcChyYXRpbzogTmdsRmlsZUNyb3BWYWx1ZSkge1xuICAgIGNvbnN0IG5hdGl2ZUVsZW1lbnQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcblxuICAgIGlmICh0aGlzLmN1cnJlbnRSYXRpbykge1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyhuYXRpdmVFbGVtZW50LCBgJHt0aGlzLmNyb3BDbGFzc31gKTtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3MobmF0aXZlRWxlbWVudCwgYCR7dGhpcy5jcm9wQ2xhc3N9XyR7dGhpcy5jdXJyZW50UmF0aW99YCk7XG4gICAgfVxuXG4gICAgaWYgKHJhdGlvKSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKG5hdGl2ZUVsZW1lbnQsIGAke3RoaXMuY3JvcENsYXNzfWApO1xuICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhuYXRpdmVFbGVtZW50LCBgJHt0aGlzLmNyb3BDbGFzc31fJHtyYXRpb31gKTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRSYXRpbyA9IHJhdGlvO1xuICB9XG5cbiAgcHJpdmF0ZSBjcm9wQ2xhc3MgPSAnc2xkcy1maWxlX19jcm9wJztcblxuICBwcml2YXRlIGN1cnJlbnRSYXRpbzogTmdsRmlsZUNyb3BWYWx1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIC8vIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIHRoaXMuY3JvcENsYXNzKTtcbiAgfVxufVxuIl19