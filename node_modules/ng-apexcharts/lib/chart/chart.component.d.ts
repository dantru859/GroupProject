import { OnChanges, OnInit, OnDestroy, SimpleChanges } from "@angular/core";
import { ApexAnnotations, ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill, ApexGrid, ApexLegend, ApexNonAxisChartSeries, ApexMarkers, ApexNoData, ApexPlotOptions, ApexResponsive, ApexStates, ApexStroke, ApexTheme, ApexTitleSubtitle, ApexTooltip, ApexXAxis, ApexYAxis } from "../model/apex-types";
import * as ɵngcc0 from '@angular/core';
export declare class ChartComponent implements OnInit, OnChanges, OnDestroy {
    chart: ApexChart;
    annotations: ApexAnnotations;
    colors: any[];
    dataLabels: ApexDataLabels;
    series: ApexAxisChartSeries | ApexNonAxisChartSeries;
    stroke: ApexStroke;
    labels: string[];
    legend: ApexLegend;
    markers: ApexMarkers;
    noData: ApexNoData;
    fill: ApexFill;
    tooltip: ApexTooltip;
    plotOptions: ApexPlotOptions;
    responsive: ApexResponsive[];
    xaxis: ApexXAxis;
    yaxis: ApexYAxis | ApexYAxis[];
    grid: ApexGrid;
    states: ApexStates;
    title: ApexTitleSubtitle;
    subtitle: ApexTitleSubtitle;
    theme: ApexTheme;
    autoUpdateSeries: boolean;
    private chartElement;
    private chartObj;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private createElement;
    render(): Promise<void>;
    updateOptions(options: any, redrawPaths?: boolean, animate?: boolean, updateSyncedCharts?: boolean): Promise<void>;
    updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;
    appendSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;
    toggleSeries(seriesName: string): any;
    showSeries(seriesName: string): void;
    hideSeries(seriesName: string): void;
    resetSeries(): void;
    toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void;
    destroy(): void;
    setLocale(localeName?: string): void;
    paper(): void;
    addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    removeAnnotation(id: string, options?: any): void;
    clearAnnotations(options?: any): void;
    dataURI(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChartComponent, "apx-chart", never, { "autoUpdateSeries": "autoUpdateSeries"; "chart": "chart"; "annotations": "annotations"; "colors": "colors"; "dataLabels": "dataLabels"; "series": "series"; "stroke": "stroke"; "labels": "labels"; "legend": "legend"; "markers": "markers"; "noData": "noData"; "fill": "fill"; "tooltip": "tooltip"; "plotOptions": "plotOptions"; "responsive": "responsive"; "xaxis": "xaxis"; "yaxis": "yaxis"; "grid": "grid"; "states": "states"; "title": "title"; "subtitle": "subtitle"; "theme": "theme"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNoYXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkNoYW5nZXMsIE9uSW5pdCwgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFwZXhBbm5vdGF0aW9ucywgQXBleEF4aXNDaGFydFNlcmllcywgQXBleENoYXJ0LCBBcGV4RGF0YUxhYmVscywgQXBleEZpbGwsIEFwZXhHcmlkLCBBcGV4TGVnZW5kLCBBcGV4Tm9uQXhpc0NoYXJ0U2VyaWVzLCBBcGV4TWFya2VycywgQXBleE5vRGF0YSwgQXBleFBsb3RPcHRpb25zLCBBcGV4UmVzcG9uc2l2ZSwgQXBleFN0YXRlcywgQXBleFN0cm9rZSwgQXBleFRoZW1lLCBBcGV4VGl0bGVTdWJ0aXRsZSwgQXBleFRvb2x0aXAsIEFwZXhYQXhpcywgQXBleFlBeGlzIH0gZnJvbSBcIi4uL21vZGVsL2FwZXgtdHlwZXNcIjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENoYXJ0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgY2hhcnQ6IEFwZXhDaGFydDtcbiAgICBhbm5vdGF0aW9uczogQXBleEFubm90YXRpb25zO1xuICAgIGNvbG9yczogYW55W107XG4gICAgZGF0YUxhYmVsczogQXBleERhdGFMYWJlbHM7XG4gICAgc2VyaWVzOiBBcGV4QXhpc0NoYXJ0U2VyaWVzIHwgQXBleE5vbkF4aXNDaGFydFNlcmllcztcbiAgICBzdHJva2U6IEFwZXhTdHJva2U7XG4gICAgbGFiZWxzOiBzdHJpbmdbXTtcbiAgICBsZWdlbmQ6IEFwZXhMZWdlbmQ7XG4gICAgbWFya2VyczogQXBleE1hcmtlcnM7XG4gICAgbm9EYXRhOiBBcGV4Tm9EYXRhO1xuICAgIGZpbGw6IEFwZXhGaWxsO1xuICAgIHRvb2x0aXA6IEFwZXhUb29sdGlwO1xuICAgIHBsb3RPcHRpb25zOiBBcGV4UGxvdE9wdGlvbnM7XG4gICAgcmVzcG9uc2l2ZTogQXBleFJlc3BvbnNpdmVbXTtcbiAgICB4YXhpczogQXBleFhBeGlzO1xuICAgIHlheGlzOiBBcGV4WUF4aXMgfCBBcGV4WUF4aXNbXTtcbiAgICBncmlkOiBBcGV4R3JpZDtcbiAgICBzdGF0ZXM6IEFwZXhTdGF0ZXM7XG4gICAgdGl0bGU6IEFwZXhUaXRsZVN1YnRpdGxlO1xuICAgIHN1YnRpdGxlOiBBcGV4VGl0bGVTdWJ0aXRsZTtcbiAgICB0aGVtZTogQXBleFRoZW1lO1xuICAgIGF1dG9VcGRhdGVTZXJpZXM6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBjaGFydEVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBjaGFydE9iajtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjcmVhdGVFbGVtZW50O1xuICAgIHJlbmRlcigpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHVwZGF0ZU9wdGlvbnMob3B0aW9uczogYW55LCByZWRyYXdQYXRocz86IGJvb2xlYW4sIGFuaW1hdGU/OiBib29sZWFuLCB1cGRhdGVTeW5jZWRDaGFydHM/OiBib29sZWFuKTogUHJvbWlzZTx2b2lkPjtcbiAgICB1cGRhdGVTZXJpZXMobmV3U2VyaWVzOiBBcGV4QXhpc0NoYXJ0U2VyaWVzIHwgQXBleE5vbkF4aXNDaGFydFNlcmllcywgYW5pbWF0ZT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGFwcGVuZFNlcmllcyhuZXdTZXJpZXM6IEFwZXhBeGlzQ2hhcnRTZXJpZXMgfCBBcGV4Tm9uQXhpc0NoYXJ0U2VyaWVzLCBhbmltYXRlPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgdG9nZ2xlU2VyaWVzKHNlcmllc05hbWU6IHN0cmluZyk6IGFueTtcbiAgICBzaG93U2VyaWVzKHNlcmllc05hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgaGlkZVNlcmllcyhzZXJpZXNOYW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIHJlc2V0U2VyaWVzKCk6IHZvaWQ7XG4gICAgdG9nZ2xlRGF0YVBvaW50U2VsZWN0aW9uKHNlcmllc0luZGV4OiBudW1iZXIsIGRhdGFQb2ludEluZGV4PzogbnVtYmVyKTogdm9pZDtcbiAgICBkZXN0cm95KCk6IHZvaWQ7XG4gICAgc2V0TG9jYWxlKGxvY2FsZU5hbWU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIHBhcGVyKCk6IHZvaWQ7XG4gICAgYWRkWGF4aXNBbm5vdGF0aW9uKG9wdGlvbnM6IGFueSwgcHVzaFRvTWVtb3J5PzogYm9vbGVhbiwgY29udGV4dD86IGFueSk6IHZvaWQ7XG4gICAgYWRkWWF4aXNBbm5vdGF0aW9uKG9wdGlvbnM6IGFueSwgcHVzaFRvTWVtb3J5PzogYm9vbGVhbiwgY29udGV4dD86IGFueSk6IHZvaWQ7XG4gICAgYWRkUG9pbnRBbm5vdGF0aW9uKG9wdGlvbnM6IGFueSwgcHVzaFRvTWVtb3J5PzogYm9vbGVhbiwgY29udGV4dD86IGFueSk6IHZvaWQ7XG4gICAgcmVtb3ZlQW5ub3RhdGlvbihpZDogc3RyaW5nLCBvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBjbGVhckFubm90YXRpb25zKG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICAgIGRhdGFVUkkoKTogUHJvbWlzZTx2b2lkPjtcbn1cbiJdfQ==